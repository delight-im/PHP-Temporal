<?php

/*
 * PHP-Temporal (https://github.com/delight-im/PHP-Temporal)
 * Copyright (c) delight.im (https://www.delight.im/)
 * Licensed under the MIT License (https://opensource.org/licenses/MIT)
 */

// enable error reporting
\error_reporting(E_ALL);
\ini_set('display_errors', 'stdout');

// enable assertions
\ini_set('assert.active', 1);
@\ini_set('zend.assertions', 1);
\ini_set('assert.exception', 1);

\header('Content-type: text/plain; charset=utf-8');

require __DIR__.'/../vendor/autoload.php';

// set the default time zone for all tests
\date_default_timezone_set('America/Los_Angeles');

// mock the current time for reliable testing
\Delight\Temporal\Temporal::setMockNow(
	\Delight\Temporal\Temporal::fromDateTime(1855, 6, 15, 12, 30, 30)
);

$now = \Delight\Temporal\Temporal::now();
$declarationOfIndependence = \Delight\Temporal\Temporal::fromDate(1776, 7, 4);
$moonLanding = \Delight\Temporal\Temporal::fromUnixSeconds(-14182916);
$smallStepForMan = \Delight\Temporal\Temporal::fromUnixMillis(-14159025000);
$yesterday = \Delight\Temporal\Temporal::yesterday();
$quarterPastMidnight = \Delight\Temporal\Temporal::fromTime(0, 15, 0);
$tomorrow = \Delight\Temporal\Temporal::tomorrow();
$problem2038 = \Delight\Temporal\Temporal::fromDateTime(2038, 1, 18, 19, 14, 7);
$plainDateTime = new \DateTime();
$plainDateTimeImmutable = new \DateTimeImmutable();

assertSame((string) \Delight\Temporal\Temporal::now(), '1855-06-15T12:30:30-08:00', __LINE__);
assertSame((string) \Delight\Temporal\Temporal::now('Europe/Vienna'), '1855-06-15T21:30:30+01:00', __LINE__);
assertSame((string) \Delight\Temporal\Temporal::fromUnixSeconds(-3614729370), '1855-06-15T12:30:30-08:00', __LINE__);
assertSame((string) \Delight\Temporal\Temporal::fromUnixSeconds(-3614729370, 'Europe/Vienna'), '1855-06-15T21:30:30+01:00', __LINE__);
assertSame((string) \Delight\Temporal\Temporal::fromUnixMillis(-3614729370000), '1855-06-15T12:30:30-08:00', __LINE__);
assertSame((string) \Delight\Temporal\Temporal::fromUnixMillis(-3614729370000, 'Europe/Vienna'), '1855-06-15T21:30:30+01:00', __LINE__);
assertSame((string) \Delight\Temporal\Temporal::fromIso8601DateTime('1855-06-15T12:30:30-08:00'), '1855-06-15T12:30:30-08:00', __LINE__);
assertSame((string) \Delight\Temporal\Temporal::fromIso8601DateTime('1855-06-15T12:30:30-08:00', 'Europe/Vienna'), '1855-06-15T21:30:30+01:00', __LINE__);
assertSame((string) \Delight\Temporal\Temporal::fromIso8601DateTimeExtended('1855-06-15T12:30:30-08:00'), '1855-06-15T12:30:30-08:00', __LINE__);
assertSame((string) \Delight\Temporal\Temporal::fromIso8601DateTimeExtended('1855-06-15T12:30:30-08:00', 'Europe/Vienna'), '1855-06-15T21:30:30+01:00', __LINE__);
assertSame((string) \Delight\Temporal\Temporal::fromIso8601DateTimeBasic('18550615T123030-0800'), '1855-06-15T12:30:30-08:00', __LINE__);
assertSame((string) \Delight\Temporal\Temporal::fromIso8601DateTimeBasic('18550615T123030-0800', 'Europe/Vienna'), '1855-06-15T21:30:30+01:00', __LINE__);
assertSame((string) \Delight\Temporal\Temporal::fromIso8601Date('1855-06-15')->withTime(12, 30, 30), '1855-06-15T12:30:30-08:00', __LINE__);
assertSame((string) \Delight\Temporal\Temporal::fromIso8601Date('1855-06-15', 'Europe/Vienna')->withTime(21, 30, 30), '1855-06-15T21:30:30+01:00', __LINE__);
assertSame((string) \Delight\Temporal\Temporal::fromIso8601DateExtended('1855-06-15')->withTime(12, 30, 30), '1855-06-15T12:30:30-08:00', __LINE__);
assertSame((string) \Delight\Temporal\Temporal::fromIso8601DateExtended('1855-06-15', 'Europe/Vienna')->withTime(21, 30, 30), '1855-06-15T21:30:30+01:00', __LINE__);
assertSame((string) \Delight\Temporal\Temporal::fromIso8601DateBasic('18550615')->withTime(12, 30, 30), '1855-06-15T12:30:30-08:00', __LINE__);
assertSame((string) \Delight\Temporal\Temporal::fromIso8601DateBasic('18550615', 'Europe/Vienna')->withTime(21, 30, 30), '1855-06-15T21:30:30+01:00', __LINE__);
assertSame((string) \Delight\Temporal\Temporal::fromIso8601Time('12:30:30-08:00')->withDate(1855, 6, 15)->minusHours(1), '1855-06-15T12:30:30-08:00', __LINE__);
assertSame((string) \Delight\Temporal\Temporal::fromIso8601Time('12:30:30-08:00', 'Europe/Vienna')->withDate(1855, 6, 15)->minusHours(1), '1855-06-15T21:30:30+01:00', __LINE__);
assertSame((string) \Delight\Temporal\Temporal::fromIso8601TimeExtended('12:30:30-08:00')->withDate(1855, 6, 15)->minusHours(1), '1855-06-15T12:30:30-08:00', __LINE__);
assertSame((string) \Delight\Temporal\Temporal::fromIso8601TimeExtended('12:30:30-08:00', 'Europe/Vienna')->withDate(1855, 6, 15)->minusHours(1), '1855-06-15T21:30:30+01:00', __LINE__);
assertSame((string) \Delight\Temporal\Temporal::fromIso8601TimeBasic('123030-0800')->withDate(1855, 6, 15)->minusHours(1), '1855-06-15T12:30:30-08:00', __LINE__);
assertSame((string) \Delight\Temporal\Temporal::fromIso8601TimeBasic('123030-0800', 'Europe/Vienna')->withDate(1855, 6, 15)->minusHours(1), '1855-06-15T21:30:30+01:00', __LINE__);
assertSame((string) \Delight\Temporal\Temporal::fromDateTime(1855, 6, 15, 12, 30, 30), '1855-06-15T12:30:30-08:00', __LINE__);
assertSame((string) \Delight\Temporal\Temporal::fromDateTime(1855, 6, 15, 21, 30, 30, 'Europe/Vienna'), '1855-06-15T21:30:30+01:00', __LINE__);
assertSame((string) \Delight\Temporal\Temporal::fromDate(1855, 6, 15), '1855-06-15T12:30:30-08:00', __LINE__);
assertSame((string) \Delight\Temporal\Temporal::fromDate(1855, 6, 15, 'Europe/Vienna'), '1855-06-15T21:30:30+01:00', __LINE__);
assertSame((string) \Delight\Temporal\Temporal::fromTime(12, 30, 30), '1855-06-15T12:30:30-08:00', __LINE__);
assertSame((string) \Delight\Temporal\Temporal::fromTime(21, 30, 30, 'Europe/Vienna'), '1855-06-15T21:30:30+01:00', __LINE__);
assertSame((string) \Delight\Temporal\Temporal::fromFormat('15.06.1855 12:30:30', 'd.m.Y H:i:s'), '1855-06-15T12:30:30-08:00', __LINE__);
assertSame((string) \Delight\Temporal\Temporal::fromFormat('15.06.1855 21:30:30', 'd.m.Y H:i:s', 'Europe/Vienna'), '1855-06-15T21:30:30+01:00', __LINE__);

assertSame(\Delight\Temporal\Temporal::fromDateTimeInterface($plainDateTime)->toUnixSeconds(), (int) $plainDateTime->format('U'), __LINE__);
assertSame(\Delight\Temporal\Temporal::fromDateTimeInterface($plainDateTime)->plusSeconds(5)->toUnixSeconds(), (int) $plainDateTime->format('U') + 5, __LINE__);
assertSame(\Delight\Temporal\Temporal::fromDateTimeInterface($plainDateTime)->minusSeconds(42)->toUnixSeconds(), (int) $plainDateTime->format('U') - 42, __LINE__);
assertSame(\Delight\Temporal\Temporal::fromDateTimeInterface($plainDateTimeImmutable)->toUnixSeconds(), (int) $plainDateTimeImmutable->format('U'), __LINE__);
assertSame(\Delight\Temporal\Temporal::fromDateTimeInterface($plainDateTimeImmutable)->plusSeconds(5)->toUnixSeconds(), (int) $plainDateTimeImmutable->format('U') + 5, __LINE__);
assertSame(\Delight\Temporal\Temporal::fromDateTimeInterface($plainDateTimeImmutable)->minusSeconds(42)->toUnixSeconds(), (int) $plainDateTimeImmutable->format('U') - 42, __LINE__);

assertSame((string) \Delight\Temporal\Temporal::yesterday()->plusDays(1), '1855-06-15T12:30:30-08:00', __LINE__);
assertSame((string) \Delight\Temporal\Temporal::yesterday('Europe/Vienna')->plusDays(1), '1855-06-15T21:30:30+01:00', __LINE__);
assertSame((string) \Delight\Temporal\Temporal::today(), '1855-06-15T12:30:30-08:00', __LINE__);
assertSame((string) \Delight\Temporal\Temporal::today('Europe/Vienna'), '1855-06-15T21:30:30+01:00', __LINE__);
assertSame((string) \Delight\Temporal\Temporal::tomorrow()->minusDays(1), '1855-06-15T12:30:30-08:00', __LINE__);
assertSame((string) \Delight\Temporal\Temporal::tomorrow('Europe/Vienna')->minusDays(1), '1855-06-15T21:30:30+01:00', __LINE__);

assertSame((string) $now, '1855-06-15T12:30:30-08:00', __LINE__);
assertSame((string) $now, (string) \Delight\Temporal\Temporal::today(), __LINE__);
assertSame((string) $declarationOfIndependence, '1776-07-04T12:30:30-08:00', __LINE__);
assertSame((string) $moonLanding, '1969-07-20T13:18:04-07:00', __LINE__);
assertSame((string) $moonLanding->withTimeZone('Africa/Nairobi'), (string) \Delight\Temporal\Temporal::fromIso8601DateTime('1969-07-20T20:18:04+00:00', 'Africa/Nairobi'), __LINE__);
assertSame((string) $moonLanding->withTimeZone('Africa/Nairobi'), (string) \Delight\Temporal\Temporal::fromIso8601DateTimeExtended('1969-07-20T20:18:04Z', 'Africa/Nairobi'), __LINE__);
assertSame((string) $moonLanding->withTimeZone('Africa/Nairobi'), (string) \Delight\Temporal\Temporal::fromIso8601DateTimeBasic('19690720T201804+0000', 'Africa/Nairobi'), __LINE__);
assertSame($moonLanding->toIso8601DateExtended(), \Delight\Temporal\Temporal::fromIso8601Date('1969-07-20')->toIso8601DateExtended(), __LINE__);
assertSame($moonLanding->toIso8601DateExtended(), \Delight\Temporal\Temporal::fromIso8601DateExtended('1969-07-20')->toIso8601DateExtended(), __LINE__);
assertSame($moonLanding->toIso8601DateExtended(), \Delight\Temporal\Temporal::fromIso8601DateBasic('19690720')->toIso8601DateExtended(), __LINE__);
assertSame($moonLanding->withTimeZone('Africa/Nairobi')->toIso8601TimeExtended(), \Delight\Temporal\Temporal::fromIso8601Time('20:18:04+00:00', 'Africa/Nairobi')->toIso8601TimeExtended(), __LINE__);
assertSame($moonLanding->toIso8601TimeExtended(), \Delight\Temporal\Temporal::fromIso8601TimeExtended('20:18:04Z')->toIso8601TimeExtended(), __LINE__);
assertSame($moonLanding->toIso8601TimeExtended(), \Delight\Temporal\Temporal::fromIso8601TimeBasic('201804+0000')->toIso8601TimeExtended(), __LINE__);
assertSame($moonLanding->withTimeZone('Africa/Nairobi')->toIso8601TimeBasic(), \Delight\Temporal\Temporal::fromIso8601Time('20:18:04+00:00', 'Africa/Nairobi')->toIso8601TimeBasic(), __LINE__);
assertSame($moonLanding->toIso8601TimeBasic(), \Delight\Temporal\Temporal::fromIso8601TimeExtended('20:18:04Z')->toIso8601TimeBasic(), __LINE__);
assertSame($moonLanding->toIso8601TimeBasic(), \Delight\Temporal\Temporal::fromIso8601TimeBasic('201804+0000')->toIso8601TimeBasic(), __LINE__);
assertSame($moonLanding->toFormat('d.m.Y H:i:s'), '20.07.1969 13:18:04', __LINE__);
assertSame($moonLanding->toFormat('d.m.Y H:i:s P'), '20.07.1969 13:18:04 -07:00', __LINE__);

assertSame($smallStepForMan->toDateTime() instanceof \DateTime, true, __LINE__);
assertSame($smallStepForMan->toDateTime() instanceof \DateTimeInterface, true, __LINE__);
assertSame($smallStepForMan->toDateTime() instanceof \DateTimeImmutable, false, __LINE__);
assertSame((int) $smallStepForMan->toDateTime()->format('U'), $smallStepForMan->toUnixSeconds(), __LINE__);
assertSame((int) $smallStepForMan->toDateTime()->modify('+42 days')->format('U'), $smallStepForMan->plusDays(42)->toUnixSeconds(), __LINE__);
assertSame((int) $smallStepForMan->toDateTime()->modify('-42 minutes')->format('U'), $smallStepForMan->minusMinutes(42)->toUnixSeconds(), __LINE__);
assertSame($smallStepForMan->toDateTimeImmutable() instanceof \DateTime, false, __LINE__);
assertSame($smallStepForMan->toDateTimeImmutable() instanceof \DateTimeInterface, true, __LINE__);
assertSame($smallStepForMan->toDateTimeImmutable() instanceof \DateTimeImmutable, true, __LINE__);
assertSame((int) $smallStepForMan->toDateTimeImmutable()->format('U'), $smallStepForMan->toUnixSeconds(), __LINE__);
assertSame((int) $smallStepForMan->toDateTimeImmutable()->modify('+42 days')->format('U'), $smallStepForMan->plusDays(42)->toUnixSeconds(), __LINE__);
assertSame((int) $smallStepForMan->toDateTimeImmutable()->modify('-42 minutes')->format('U'), $smallStepForMan->minusMinutes(42)->toUnixSeconds(), __LINE__);

assertSame((string) $smallStepForMan, '1969-07-20T19:56:15-07:00', __LINE__);
assertSame((string) $yesterday, '1855-06-14T12:30:30-08:00', __LINE__);
assertSame((string) $quarterPastMidnight, '1855-06-15T00:15:00-08:00', __LINE__);
assertSame((string) $tomorrow, '1855-06-16T12:30:30-08:00', __LINE__);
assertSame((string) $problem2038->withTimeZone('UTC'), '2038-01-19T03:14:07+00:00', __LINE__);

assertSame((string) $moonLanding->plusYears(1), '1970-07-20T13:18:04-07:00', __LINE__);
assertSame((string) $moonLanding->plusYears(42), '2011-07-20T13:18:04-07:00', __LINE__);
assertSame((string) $moonLanding->plusMonths(1), '1969-08-20T13:18:04-07:00', __LINE__);
assertSame((string) $moonLanding->plusMonths(42), '1973-01-20T13:18:04-08:00', __LINE__);
assertSame((string) $moonLanding->plusWeeks(1), '1969-07-27T13:18:04-07:00', __LINE__);
assertSame((string) $moonLanding->plusWeeks(42), '1970-05-10T13:18:04-07:00', __LINE__);
assertSame((string) $moonLanding->plusDays(1), '1969-07-21T13:18:04-07:00', __LINE__);
assertSame((string) $moonLanding->plusDays(42), '1969-08-31T13:18:04-07:00', __LINE__);
assertSame((string) $moonLanding->plusHours(1), '1969-07-20T14:18:04-07:00', __LINE__);
assertSame((string) $moonLanding->plusHours(84), '1969-07-24T01:18:04-07:00', __LINE__);
assertSame((string) $moonLanding->plusMinutes(1), '1969-07-20T13:19:04-07:00', __LINE__);
assertSame((string) $moonLanding->plusMinutes(84), '1969-07-20T14:42:04-07:00', __LINE__);
assertSame((string) $moonLanding->plusSeconds(1), '1969-07-20T13:18:05-07:00', __LINE__);
assertSame((string) $moonLanding->plusSeconds(84), '1969-07-20T13:19:28-07:00', __LINE__);
assertSame((string) $moonLanding->plusIso8601Duration('P2Y'), '1971-07-20T13:18:04-07:00', __LINE__);
assertSame((string) $moonLanding->plusIso8601Duration('P3M'), '1969-10-20T13:18:04-07:00', __LINE__);
assertSame((string) $moonLanding->plusIso8601Duration('P12M'), '1970-07-20T13:18:04-07:00', __LINE__);
assertSame((string) $moonLanding->plusIso8601Duration('P14M'), '1970-09-20T13:18:04-07:00', __LINE__);
assertSame((string) $moonLanding->plusIso8601Duration('P4D'), '1969-07-24T13:18:04-07:00', __LINE__);
assertSame((string) $moonLanding->plusIso8601Duration('P8D'), '1969-07-28T13:18:04-07:00', __LINE__);
assertSame((string) $moonLanding->plusIso8601Duration('P32D'), '1969-08-21T13:18:04-07:00', __LINE__);
assertSame((string) $moonLanding->plusIso8601Duration('PT5H'), '1969-07-20T18:18:04-07:00', __LINE__);
assertSame((string) $moonLanding->plusIso8601Duration('PT23H'), '1969-07-21T12:18:04-07:00', __LINE__);
assertSame((string) $moonLanding->plusIso8601Duration('PT36H'), '1969-07-22T01:18:04-07:00', __LINE__);
assertSame((string) $moonLanding->plusIso8601Duration('PT6M'), '1969-07-20T13:24:04-07:00', __LINE__);
assertSame((string) $moonLanding->plusIso8601Duration('PT64M'), '1969-07-20T14:22:04-07:00', __LINE__);
assertSame((string) $moonLanding->plusIso8601Duration('PT7S'), '1969-07-20T13:18:11-07:00', __LINE__);
assertSame((string) $moonLanding->plusIso8601Duration('PT72S'), '1969-07-20T13:19:16-07:00', __LINE__);
assertSame((string) $moonLanding->plusIso8601Duration('P1DT12H'), '1969-07-22T01:18:04-07:00', __LINE__);
assertSame((string) $moonLanding->plusIso8601Duration('P23DT23H'), '1969-08-13T12:18:04-07:00', __LINE__);
assertSame((string) $moonLanding->plusIso8601Duration('P6M'), '1970-01-20T13:18:04-08:00', __LINE__);

assertSame((string) $moonLanding->minusYears(1), '1968-07-20T13:18:04-07:00', __LINE__);
assertSame((string) $moonLanding->minusYears(42), '1927-07-20T13:18:04-08:00', __LINE__);
assertSame((string) $moonLanding->minusMonths(1), '1969-06-20T13:18:04-07:00', __LINE__);
assertSame((string) $moonLanding->minusMonths(42), '1966-01-20T13:18:04-08:00', __LINE__);
assertSame((string) $moonLanding->minusWeeks(1), '1969-07-13T13:18:04-07:00', __LINE__);
assertSame((string) $moonLanding->minusWeeks(42), '1968-09-29T13:18:04-07:00', __LINE__);
assertSame((string) $moonLanding->minusDays(1), '1969-07-19T13:18:04-07:00', __LINE__);
assertSame((string) $moonLanding->minusDays(42), '1969-06-08T13:18:04-07:00', __LINE__);
assertSame((string) $moonLanding->minusHours(1), '1969-07-20T12:18:04-07:00', __LINE__);
assertSame((string) $moonLanding->minusHours(84), '1969-07-17T01:18:04-07:00', __LINE__);
assertSame((string) $moonLanding->minusMinutes(1), '1969-07-20T13:17:04-07:00', __LINE__);
assertSame((string) $moonLanding->minusMinutes(84), '1969-07-20T11:54:04-07:00', __LINE__);
assertSame((string) $moonLanding->minusSeconds(1), '1969-07-20T13:18:03-07:00', __LINE__);
assertSame((string) $moonLanding->minusSeconds(84), '1969-07-20T13:16:40-07:00', __LINE__);
assertSame((string) $moonLanding->minusIso8601Duration('P2Y'), '1967-07-20T13:18:04-07:00', __LINE__);
assertSame((string) $moonLanding->minusIso8601Duration('P3M'), '1969-04-20T13:18:04-08:00', __LINE__);
assertSame((string) $moonLanding->minusIso8601Duration('P12M'), '1968-07-20T13:18:04-07:00', __LINE__);
assertSame((string) $moonLanding->minusIso8601Duration('P14M'), '1968-05-20T13:18:04-07:00', __LINE__);
assertSame((string) $moonLanding->minusIso8601Duration('P4D'), '1969-07-16T13:18:04-07:00', __LINE__);
assertSame((string) $moonLanding->minusIso8601Duration('P8D'), '1969-07-12T13:18:04-07:00', __LINE__);
assertSame((string) $moonLanding->minusIso8601Duration('P32D'), '1969-06-18T13:18:04-07:00', __LINE__);
assertSame((string) $moonLanding->minusIso8601Duration('PT5H'), '1969-07-20T08:18:04-07:00', __LINE__);
assertSame((string) $moonLanding->minusIso8601Duration('PT23H'), '1969-07-19T14:18:04-07:00', __LINE__);
assertSame((string) $moonLanding->minusIso8601Duration('PT36H'), '1969-07-19T01:18:04-07:00', __LINE__);
assertSame((string) $moonLanding->minusIso8601Duration('PT6M'), '1969-07-20T13:12:04-07:00', __LINE__);
assertSame((string) $moonLanding->minusIso8601Duration('PT64M'), '1969-07-20T12:14:04-07:00', __LINE__);
assertSame((string) $moonLanding->minusIso8601Duration('PT7S'), '1969-07-20T13:17:57-07:00', __LINE__);
assertSame((string) $moonLanding->minusIso8601Duration('PT72S'), '1969-07-20T13:16:52-07:00', __LINE__);
assertSame((string) $moonLanding->minusIso8601Duration('P1DT12H'), '1969-07-19T01:18:04-07:00', __LINE__);
assertSame((string) $moonLanding->minusIso8601Duration('P23DT23H'), '1969-06-26T14:18:04-07:00', __LINE__);
assertSame((string) $moonLanding->minusIso8601Duration('P6M'), '1969-01-20T13:18:04-08:00', __LINE__);

assertSame(\Delight\Temporal\Temporal::fromDate(2017, 1, 28)->plusMonths(1)->toIso8601DateBasic(), '20170228', __LINE__);
assertSame(\Delight\Temporal\Temporal::fromDate(2017, 1, 31)->plusMonths(1)->toIso8601DateBasic(), '20170228', __LINE__);
assertSame(\Delight\Temporal\Temporal::fromDate(2017, 1, 28)->plusMonths(2)->toIso8601DateBasic(), '20170328', __LINE__);
assertSame(\Delight\Temporal\Temporal::fromDate(2017, 1, 31)->plusMonths(2)->toIso8601DateBasic(), '20170331', __LINE__);
assertSame(\Delight\Temporal\Temporal::fromDate(2017, 1, 28)->plusMonths(3)->toIso8601DateBasic(), '20170428', __LINE__);
assertSame(\Delight\Temporal\Temporal::fromDate(2017, 1, 31)->plusMonths(3)->toIso8601DateBasic(), '20170430', __LINE__);
assertSame(\Delight\Temporal\Temporal::fromDate(2017, 5, 28)->minusMonths(3)->toIso8601DateBasic(), '20170228', __LINE__);
assertSame(\Delight\Temporal\Temporal::fromDate(2017, 5, 31)->minusMonths(3)->toIso8601DateBasic(), '20170228', __LINE__);
assertSame(\Delight\Temporal\Temporal::fromDate(2017, 5, 28)->minusMonths(2)->toIso8601DateBasic(), '20170328', __LINE__);
assertSame(\Delight\Temporal\Temporal::fromDate(2017, 5, 31)->minusMonths(2)->toIso8601DateBasic(), '20170331', __LINE__);
assertSame(\Delight\Temporal\Temporal::fromDate(2017, 5, 28)->minusMonths(1)->toIso8601DateBasic(), '20170428', __LINE__);
assertSame(\Delight\Temporal\Temporal::fromDate(2017, 5, 31)->minusMonths(1)->toIso8601DateBasic(), '20170430', __LINE__);
assertSame(\Delight\Temporal\Temporal::fromDate(2017, 1, 28)->plusIso8601Duration('P1M')->toIso8601DateBasic(), '20170228', __LINE__);
assertSame(\Delight\Temporal\Temporal::fromDate(2017, 1, 31)->plusIso8601Duration('P1M')->toIso8601DateBasic(), '20170228', __LINE__);
assertSame(\Delight\Temporal\Temporal::fromDate(2017, 1, 28)->plusIso8601Duration('P2M')->toIso8601DateBasic(), '20170328', __LINE__);
assertSame(\Delight\Temporal\Temporal::fromDate(2017, 1, 31)->plusIso8601Duration('P2M')->toIso8601DateBasic(), '20170331', __LINE__);
assertSame(\Delight\Temporal\Temporal::fromDate(2017, 1, 28)->plusIso8601Duration('P3M')->toIso8601DateBasic(), '20170428', __LINE__);
assertSame(\Delight\Temporal\Temporal::fromDate(2017, 1, 31)->plusIso8601Duration('P3M')->toIso8601DateBasic(), '20170430', __LINE__);
assertSame(\Delight\Temporal\Temporal::fromDate(2017, 5, 28)->minusIso8601Duration('P3M')->toIso8601DateBasic(), '20170228', __LINE__);
assertSame(\Delight\Temporal\Temporal::fromDate(2017, 5, 31)->minusIso8601Duration('P3M')->toIso8601DateBasic(), '20170228', __LINE__);
assertSame(\Delight\Temporal\Temporal::fromDate(2017, 5, 28)->minusIso8601Duration('P2M')->toIso8601DateBasic(), '20170328', __LINE__);
assertSame(\Delight\Temporal\Temporal::fromDate(2017, 5, 31)->minusIso8601Duration('P2M')->toIso8601DateBasic(), '20170331', __LINE__);
assertSame(\Delight\Temporal\Temporal::fromDate(2017, 5, 28)->minusIso8601Duration('P1M')->toIso8601DateBasic(), '20170428', __LINE__);
assertSame(\Delight\Temporal\Temporal::fromDate(2017, 5, 31)->minusIso8601Duration('P1M')->toIso8601DateBasic(), '20170430', __LINE__);

assertSame($moonLanding->getYear(), 1969, __LINE__);
assertSame($moonLanding->getMonth(), 7, __LINE__);
assertSame($moonLanding->getDay(), 20, __LINE__);
assertSame($moonLanding->withTimeZone('Australia/Melbourne')->getDay(), 21, __LINE__);
assertSame($moonLanding->getHour(), 13, __LINE__);
assertSame($moonLanding->getMinute(), 18, __LINE__);
assertSame($moonLanding->getSecond(), 4, __LINE__);
assertSame($moonLanding->getWeekday(), \Delight\Temporal\Iso8601\Iso8601Weekday::SUNDAY, __LINE__);
assertSame($moonLanding->withTimeZone('Australia/Sydney')->getWeekday(), \Delight\Temporal\Iso8601\Iso8601Weekday::MONDAY, __LINE__);
assertSame($moonLanding->isMonday(), false, __LINE__);
assertSame($moonLanding->isTuesday(), false, __LINE__);
assertSame($moonLanding->isWednesday(), false, __LINE__);
assertSame($moonLanding->isThursday(), false, __LINE__);
assertSame($moonLanding->isFriday(), false, __LINE__);
assertSame($moonLanding->isSaturday(), false, __LINE__);
assertSame($moonLanding->isSunday(), true, __LINE__);
assertSame($moonLanding->plusDays(3)->isMonday(), false, __LINE__);
assertSame($moonLanding->plusDays(3)->isTuesday(), false, __LINE__);
assertSame($moonLanding->plusDays(3)->isWednesday(), true, __LINE__);
assertSame($moonLanding->plusDays(3)->isThursday(), false, __LINE__);
assertSame($moonLanding->plusDays(3)->isFriday(), false, __LINE__);
assertSame($moonLanding->plusDays(3)->isSaturday(), false, __LINE__);
assertSame($moonLanding->plusDays(3)->isSunday(), false, __LINE__);
assertSame($moonLanding->getWeekOfYear(), 29, __LINE__);
assertSame($moonLanding->getWeekYear(), 1969, __LINE__);
assertSame($moonLanding->getDayOfYear(), 201, __LINE__);

assertSame((string) $moonLanding->withYear(1984), '1984-07-20T13:18:04-07:00', __LINE__);
assertSame((string) $moonLanding->withMonth(12), '1969-12-20T13:18:04-08:00', __LINE__);
assertSame((string) $moonLanding->withDay(24), '1969-07-24T13:18:04-07:00', __LINE__);
assertSame((string) $moonLanding->withDate(1989, 11, 9), '1989-11-09T13:18:04-08:00', __LINE__);
assertSame((string) $moonLanding->withHour(12), '1969-07-20T12:18:04-07:00', __LINE__);
assertSame((string) $moonLanding->withMinute(30), '1969-07-20T13:30:04-07:00', __LINE__);
assertSame((string) $moonLanding->withSecond(45), '1969-07-20T13:18:45-07:00', __LINE__);
assertSame((string) $moonLanding->withTime(19, 4, 30), '1969-07-20T19:04:30-07:00', __LINE__);
assertSame((string) $moonLanding->withYear(1989)->withMonth(10), '1989-10-20T13:18:04-07:00', __LINE__);
assertSame((string) $moonLanding->withYear(1989)->withSecond(52), '1989-07-20T13:18:52-07:00', __LINE__);

assertSame($moonLanding->toIso8601DateTime(), $moonLanding->toIso8601DateTimeExtended(), __LINE__);
assertSame($smallStepForMan->toIso8601DateTime(), $smallStepForMan->toIso8601DateTimeExtended(), __LINE__);
assertSame($moonLanding->toIso8601DateTimeExtended(), '1969-07-20T13:18:04-07:00', __LINE__);
assertSame($moonLanding->withDefaultTimeZone()->toIso8601DateTimeExtended(), $moonLanding->toIso8601DateTimeExtended(), __LINE__);
assertSame($moonLanding->withTimeZone('UTC')->toIso8601DateTimeExtended(), '1969-07-20T20:18:04+00:00', __LINE__);
assertSame($moonLanding->withTimeZone('Australia/Melbourne')->toIso8601DateTimeExtended(), '1969-07-21T06:18:04+10:00', __LINE__);
assertSame($smallStepForMan->toIso8601DateTimeExtended(), '1969-07-20T19:56:15-07:00', __LINE__);
assertSame($smallStepForMan->withDefaultTimeZone()->toIso8601DateTimeExtended(), $smallStepForMan->toIso8601DateTimeExtended(), __LINE__);
assertSame($smallStepForMan->withTimeZone('UTC')->toIso8601DateTimeExtended(), '1969-07-21T02:56:15+00:00', __LINE__);
assertSame($smallStepForMan->withTimeZone('Australia/Melbourne')->toIso8601DateTimeExtended(), '1969-07-21T12:56:15+10:00', __LINE__);
assertSame($moonLanding->toIso8601DateTimeBasic(), '19690720T131804-0700', __LINE__);
assertSame($smallStepForMan->toIso8601DateTimeBasic(), '19690720T195615-0700', __LINE__);

assertSame($moonLanding->toUnixSeconds(), \strtotime('July 20 1969 20:18:04 UTC'), __LINE__);
assertSame($moonLanding->toUnixMillis(), $moonLanding->toUnixSeconds() * 1000, __LINE__);
assertSame($smallStepForMan->toUnixSeconds(), \strtotime('July 21 1969 02:56:15 UTC'), __LINE__);
assertSame($smallStepForMan->toUnixMillis(), $smallStepForMan->toUnixSeconds() * 1000, __LINE__);

assertSame($declarationOfIndependence->getDecadeOrdinal(), 178, __LINE__);
assertSame($declarationOfIndependence->getDecadeNominal(), 1770, __LINE__);
assertSame($declarationOfIndependence->getCenturyOrdinal(), 18, __LINE__);
assertSame($declarationOfIndependence->getCenturyNominal(), 1700, __LINE__);
assertSame($declarationOfIndependence->getMillenniumOrdinal(), 2, __LINE__);
assertSame($declarationOfIndependence->getMillenniumNominal(), 1000, __LINE__);
assertSame($declarationOfIndependence->withYear(111)->getDecadeOrdinal(), 12, __LINE__);
assertSame($declarationOfIndependence->withYear(111)->getDecadeNominal(), 110, __LINE__);
assertSame($declarationOfIndependence->withYear(111)->getCenturyOrdinal(), 2, __LINE__);
assertSame($declarationOfIndependence->withYear(111)->getCenturyNominal(), 100, __LINE__);
assertSame($declarationOfIndependence->withYear(111)->getMillenniumOrdinal(), 1, __LINE__);
assertSame($declarationOfIndependence->withYear(111)->getMillenniumNominal(), 0, __LINE__);
assertSame($declarationOfIndependence->withYear(5)->getDecadeOrdinal(), 1, __LINE__);
assertSame($declarationOfIndependence->withYear(5)->getDecadeNominal(), 0, __LINE__);
assertSame($declarationOfIndependence->withYear(5)->getCenturyOrdinal(), 1, __LINE__);
assertSame($declarationOfIndependence->withYear(5)->getCenturyNominal(), 0, __LINE__);
assertSame($declarationOfIndependence->withYear(5)->getMillenniumOrdinal(), 1, __LINE__);
assertSame($declarationOfIndependence->withYear(5)->getMillenniumNominal(), 0, __LINE__);
assertSame($declarationOfIndependence->withYear(0)->getDecadeOrdinal(), 0, __LINE__);
assertSame($declarationOfIndependence->withYear(0)->getDecadeNominal(), 0, __LINE__);
assertSame($declarationOfIndependence->withYear(0)->getCenturyOrdinal(), 0, __LINE__);
assertSame($declarationOfIndependence->withYear(0)->getCenturyNominal(), 0, __LINE__);
assertSame($declarationOfIndependence->withYear(0)->getMillenniumOrdinal(), 0, __LINE__);
assertSame($declarationOfIndependence->withYear(0)->getMillenniumNominal(), 0, __LINE__);
assertSame($declarationOfIndependence->withYear(-5)->getDecadeOrdinal(), -1, __LINE__);
assertSame($declarationOfIndependence->withYear(-5)->getDecadeNominal(), 0, __LINE__);
assertSame($declarationOfIndependence->withYear(-5)->getCenturyOrdinal(), -1, __LINE__);
assertSame($declarationOfIndependence->withYear(-5)->getCenturyNominal(), 0, __LINE__);
assertSame($declarationOfIndependence->withYear(-5)->getMillenniumOrdinal(), -1, __LINE__);
assertSame($declarationOfIndependence->withYear(-5)->getMillenniumNominal(), 0, __LINE__);
assertSame($declarationOfIndependence->withYear(-111)->getDecadeOrdinal(), -12, __LINE__);
assertSame($declarationOfIndependence->withYear(-111)->getDecadeNominal(), -110, __LINE__);
assertSame($declarationOfIndependence->withYear(-111)->getCenturyOrdinal(), -2, __LINE__);
assertSame($declarationOfIndependence->withYear(-111)->getCenturyNominal(), -100, __LINE__);
assertSame($declarationOfIndependence->withYear(-111)->getMillenniumOrdinal(), -1, __LINE__);
assertSame($declarationOfIndependence->withYear(-111)->getMillenniumNominal(), 0, __LINE__);
assertSame($declarationOfIndependence->withYear(-1776)->getDecadeOrdinal(), -178, __LINE__);
assertSame($declarationOfIndependence->withYear(-1776)->getDecadeNominal(), -1770, __LINE__);
assertSame($declarationOfIndependence->withYear(-1776)->getCenturyOrdinal(), -18, __LINE__);
assertSame($declarationOfIndependence->withYear(-1776)->getCenturyNominal(), -1700, __LINE__);
assertSame($declarationOfIndependence->withYear(-1776)->getMillenniumOrdinal(), -2, __LINE__);
assertSame($declarationOfIndependence->withYear(-1776)->getMillenniumNominal(), -1000, __LINE__);

assertSame($smallStepForMan->isDst(), true, __LINE__);
assertSame($smallStepForMan->isDaylightSavingTime(), true, __LINE__);
assertSame($smallStepForMan->plusMonths(6)->isDst(), false, __LINE__);
assertSame($smallStepForMan->plusMonths(6)->isDaylightSavingTime(), false, __LINE__);
assertSame($smallStepForMan->withTimeZone('Australia/Melbourne')->isDst(), false, __LINE__);
assertSame($smallStepForMan->withTimeZone('Australia/Melbourne')->isDaylightSavingTime(), false, __LINE__);
assertSame($smallStepForMan->withTimeZone('Europe/Berlin')->isDst(), false, __LINE__);
assertSame($smallStepForMan->withTimeZone('Europe/Berlin')->isDaylightSavingTime(), false, __LINE__);
assertSame($smallStepForMan->withTimeZone('Europe/Berlin')->plusYears(20)->isDst(), true, __LINE__);
assertSame($smallStepForMan->withTimeZone('Europe/Berlin')->plusYears(20)->isDaylightSavingTime(), true, __LINE__);

assertSame($smallStepForMan->isLeapYear(), false, __LINE__);
assertSame($smallStepForMan->plusYears(1)->isLeapYear(), false, __LINE__);
assertSame($smallStepForMan->plusYears(2)->isLeapYear(), false, __LINE__);
assertSame($smallStepForMan->plusYears(3)->isLeapYear(), true, __LINE__);
assertSame($smallStepForMan->plusYears(4)->isLeapYear(), false, __LINE__);

assertSame($moonLanding->getYearInDecade(), 9, __LINE__);
assertSame($moonLanding->getYearInCentury(), 69, __LINE__);
assertSame($moonLanding->getYearInMillennium(), 969, __LINE__);

assertSame($declarationOfIndependence->isSame($declarationOfIndependence->plusSeconds(1)), false, __LINE__);
assertSame($declarationOfIndependence->isSame($declarationOfIndependence), true, __LINE__);
assertSame($declarationOfIndependence->isMinuteSame($declarationOfIndependence->plusMinutes(1)), false, __LINE__);
assertSame($declarationOfIndependence->isMinuteSame($declarationOfIndependence->plusSeconds(1)), true, __LINE__);
assertSame($declarationOfIndependence->isMinuteSame($declarationOfIndependence), true, __LINE__);
assertSame($declarationOfIndependence->isHourSame($declarationOfIndependence->plusHours(1)), false, __LINE__);
assertSame($declarationOfIndependence->isHourSame($declarationOfIndependence->plusMinutes(1)), true, __LINE__);
assertSame($declarationOfIndependence->isHourSame($declarationOfIndependence->plusSeconds(1)), true, __LINE__);
assertSame($declarationOfIndependence->isHourSame($declarationOfIndependence), true, __LINE__);
assertSame($declarationOfIndependence->isDaySame($declarationOfIndependence->plusDays(1)), false, __LINE__);
assertSame($declarationOfIndependence->isDaySame($declarationOfIndependence->plusHours(1)), true, __LINE__);
assertSame($declarationOfIndependence->isDaySame($declarationOfIndependence->plusMinutes(1)), true, __LINE__);
assertSame($declarationOfIndependence->isDaySame($declarationOfIndependence->plusSeconds(1)), true, __LINE__);
assertSame($declarationOfIndependence->isDaySame($declarationOfIndependence), true, __LINE__);
assertSame($declarationOfIndependence->isMonthSame($declarationOfIndependence->plusMonths(1)), false, __LINE__);
assertSame($declarationOfIndependence->isMonthSame($declarationOfIndependence->plusDays(1)), true, __LINE__);
assertSame($declarationOfIndependence->isMonthSame($declarationOfIndependence->plusHours(1)), true, __LINE__);
assertSame($declarationOfIndependence->isMonthSame($declarationOfIndependence->plusMinutes(1)), true, __LINE__);
assertSame($declarationOfIndependence->isMonthSame($declarationOfIndependence->plusSeconds(1)), true, __LINE__);
assertSame($declarationOfIndependence->isMonthSame($declarationOfIndependence), true, __LINE__);
assertSame($declarationOfIndependence->isYearSame($declarationOfIndependence->plusYears(1)), false, __LINE__);
assertSame($declarationOfIndependence->isYearSame($declarationOfIndependence->plusMonths(1)), true, __LINE__);
assertSame($declarationOfIndependence->isYearSame($declarationOfIndependence->plusDays(1)), true, __LINE__);
assertSame($declarationOfIndependence->isYearSame($declarationOfIndependence->plusHours(1)), true, __LINE__);
assertSame($declarationOfIndependence->isYearSame($declarationOfIndependence->plusMinutes(1)), true, __LINE__);
assertSame($declarationOfIndependence->isYearSame($declarationOfIndependence->plusSeconds(1)), true, __LINE__);
assertSame($declarationOfIndependence->isYearSame($declarationOfIndependence), true, __LINE__);
assertSame($declarationOfIndependence->isDecadeSame($declarationOfIndependence->plusYears(10)), false, __LINE__);
assertSame($declarationOfIndependence->isDecadeSame($declarationOfIndependence->plusYears(1)), true, __LINE__);
assertSame($declarationOfIndependence->isDecadeSame($declarationOfIndependence->plusMonths(1)), true, __LINE__);
assertSame($declarationOfIndependence->isDecadeSame($declarationOfIndependence->plusDays(1)), true, __LINE__);
assertSame($declarationOfIndependence->isDecadeSame($declarationOfIndependence->plusHours(1)), true, __LINE__);
assertSame($declarationOfIndependence->isDecadeSame($declarationOfIndependence->plusMinutes(1)), true, __LINE__);
assertSame($declarationOfIndependence->isDecadeSame($declarationOfIndependence->plusSeconds(1)), true, __LINE__);
assertSame($declarationOfIndependence->isDecadeSame($declarationOfIndependence), true, __LINE__);
assertSame($declarationOfIndependence->isCenturySame($declarationOfIndependence->plusYears(100)), false, __LINE__);
assertSame($declarationOfIndependence->isCenturySame($declarationOfIndependence->plusYears(10)), true, __LINE__);
assertSame($declarationOfIndependence->isCenturySame($declarationOfIndependence->plusYears(1)), true, __LINE__);
assertSame($declarationOfIndependence->isCenturySame($declarationOfIndependence->plusMonths(1)), true, __LINE__);
assertSame($declarationOfIndependence->isCenturySame($declarationOfIndependence->plusDays(1)), true, __LINE__);
assertSame($declarationOfIndependence->isCenturySame($declarationOfIndependence->plusHours(1)), true, __LINE__);
assertSame($declarationOfIndependence->isCenturySame($declarationOfIndependence->plusMinutes(1)), true, __LINE__);
assertSame($declarationOfIndependence->isCenturySame($declarationOfIndependence->plusSeconds(1)), true, __LINE__);
assertSame($declarationOfIndependence->isCenturySame($declarationOfIndependence), true, __LINE__);
assertSame($declarationOfIndependence->isMillenniumSame($declarationOfIndependence->plusYears(1000)), false, __LINE__);
assertSame($declarationOfIndependence->isMillenniumSame($declarationOfIndependence->plusYears(100)), true, __LINE__);
assertSame($declarationOfIndependence->isMillenniumSame($declarationOfIndependence->plusYears(10)), true, __LINE__);
assertSame($declarationOfIndependence->isMillenniumSame($declarationOfIndependence->plusYears(1)), true, __LINE__);
assertSame($declarationOfIndependence->isMillenniumSame($declarationOfIndependence->plusMonths(1)), true, __LINE__);
assertSame($declarationOfIndependence->isMillenniumSame($declarationOfIndependence->plusDays(1)), true, __LINE__);
assertSame($declarationOfIndependence->isMillenniumSame($declarationOfIndependence->plusHours(1)), true, __LINE__);
assertSame($declarationOfIndependence->isMillenniumSame($declarationOfIndependence->plusMinutes(1)), true, __LINE__);
assertSame($declarationOfIndependence->isMillenniumSame($declarationOfIndependence->plusSeconds(1)), true, __LINE__);
assertSame($declarationOfIndependence->isMillenniumSame($declarationOfIndependence), true, __LINE__);

assertSame($declarationOfIndependence->isBefore($declarationOfIndependence->plusSeconds(1)), true, __LINE__);
assertSame($declarationOfIndependence->isBefore($declarationOfIndependence), false, __LINE__);
assertSame($declarationOfIndependence->isMinuteBefore($declarationOfIndependence->plusMinutes(1)), true, __LINE__);
assertSame($declarationOfIndependence->isMinuteBefore($declarationOfIndependence->plusSeconds(1)), false, __LINE__);
assertSame($declarationOfIndependence->isMinuteBefore($declarationOfIndependence), false, __LINE__);
assertSame($declarationOfIndependence->isHourBefore($declarationOfIndependence->plusHours(1)), true, __LINE__);
assertSame($declarationOfIndependence->isHourBefore($declarationOfIndependence->plusMinutes(1)), false, __LINE__);
assertSame($declarationOfIndependence->isHourBefore($declarationOfIndependence->plusSeconds(1)), false, __LINE__);
assertSame($declarationOfIndependence->isHourBefore($declarationOfIndependence), false, __LINE__);
assertSame($declarationOfIndependence->isDayBefore($declarationOfIndependence->plusDays(1)), true, __LINE__);
assertSame($declarationOfIndependence->isDayBefore($declarationOfIndependence->plusHours(1)), false, __LINE__);
assertSame($declarationOfIndependence->isDayBefore($declarationOfIndependence->plusMinutes(1)), false, __LINE__);
assertSame($declarationOfIndependence->isDayBefore($declarationOfIndependence->plusSeconds(1)), false, __LINE__);
assertSame($declarationOfIndependence->isDayBefore($declarationOfIndependence), false, __LINE__);
assertSame($declarationOfIndependence->isMonthBefore($declarationOfIndependence->plusMonths(1)), true, __LINE__);
assertSame($declarationOfIndependence->isMonthBefore($declarationOfIndependence->plusDays(1)), false, __LINE__);
assertSame($declarationOfIndependence->isMonthBefore($declarationOfIndependence->plusHours(1)), false, __LINE__);
assertSame($declarationOfIndependence->isMonthBefore($declarationOfIndependence->plusMinutes(1)), false, __LINE__);
assertSame($declarationOfIndependence->isMonthBefore($declarationOfIndependence->plusSeconds(1)), false, __LINE__);
assertSame($declarationOfIndependence->isMonthBefore($declarationOfIndependence), false, __LINE__);
assertSame($declarationOfIndependence->isYearBefore($declarationOfIndependence->plusYears(1)), true, __LINE__);
assertSame($declarationOfIndependence->isYearBefore($declarationOfIndependence->plusMonths(1)), false, __LINE__);
assertSame($declarationOfIndependence->isYearBefore($declarationOfIndependence->plusDays(1)), false, __LINE__);
assertSame($declarationOfIndependence->isYearBefore($declarationOfIndependence->plusHours(1)), false, __LINE__);
assertSame($declarationOfIndependence->isYearBefore($declarationOfIndependence->plusMinutes(1)), false, __LINE__);
assertSame($declarationOfIndependence->isYearBefore($declarationOfIndependence->plusSeconds(1)), false, __LINE__);
assertSame($declarationOfIndependence->isYearBefore($declarationOfIndependence), false, __LINE__);
assertSame($declarationOfIndependence->isDecadeBefore($declarationOfIndependence->plusYears(10)), true, __LINE__);
assertSame($declarationOfIndependence->isDecadeBefore($declarationOfIndependence->plusYears(1)), false, __LINE__);
assertSame($declarationOfIndependence->isDecadeBefore($declarationOfIndependence->plusMonths(1)), false, __LINE__);
assertSame($declarationOfIndependence->isDecadeBefore($declarationOfIndependence->plusDays(1)), false, __LINE__);
assertSame($declarationOfIndependence->isDecadeBefore($declarationOfIndependence->plusHours(1)), false, __LINE__);
assertSame($declarationOfIndependence->isDecadeBefore($declarationOfIndependence->plusMinutes(1)), false, __LINE__);
assertSame($declarationOfIndependence->isDecadeBefore($declarationOfIndependence->plusSeconds(1)), false, __LINE__);
assertSame($declarationOfIndependence->isDecadeBefore($declarationOfIndependence), false, __LINE__);
assertSame($declarationOfIndependence->isCenturyBefore($declarationOfIndependence->plusYears(100)), true, __LINE__);
assertSame($declarationOfIndependence->isCenturyBefore($declarationOfIndependence->plusYears(10)), false, __LINE__);
assertSame($declarationOfIndependence->isCenturyBefore($declarationOfIndependence->plusYears(1)), false, __LINE__);
assertSame($declarationOfIndependence->isCenturyBefore($declarationOfIndependence->plusMonths(1)), false, __LINE__);
assertSame($declarationOfIndependence->isCenturyBefore($declarationOfIndependence->plusDays(1)), false, __LINE__);
assertSame($declarationOfIndependence->isCenturyBefore($declarationOfIndependence->plusHours(1)), false, __LINE__);
assertSame($declarationOfIndependence->isCenturyBefore($declarationOfIndependence->plusMinutes(1)), false, __LINE__);
assertSame($declarationOfIndependence->isCenturyBefore($declarationOfIndependence->plusSeconds(1)), false, __LINE__);
assertSame($declarationOfIndependence->isCenturyBefore($declarationOfIndependence), false, __LINE__);
assertSame($declarationOfIndependence->isMillenniumBefore($declarationOfIndependence->plusYears(1000)), true, __LINE__);
assertSame($declarationOfIndependence->isMillenniumBefore($declarationOfIndependence->plusYears(100)), false, __LINE__);
assertSame($declarationOfIndependence->isMillenniumBefore($declarationOfIndependence->plusYears(10)), false, __LINE__);
assertSame($declarationOfIndependence->isMillenniumBefore($declarationOfIndependence->plusYears(1)), false, __LINE__);
assertSame($declarationOfIndependence->isMillenniumBefore($declarationOfIndependence->plusMonths(1)), false, __LINE__);
assertSame($declarationOfIndependence->isMillenniumBefore($declarationOfIndependence->plusDays(1)), false, __LINE__);
assertSame($declarationOfIndependence->isMillenniumBefore($declarationOfIndependence->plusHours(1)), false, __LINE__);
assertSame($declarationOfIndependence->isMillenniumBefore($declarationOfIndependence->plusMinutes(1)), false, __LINE__);
assertSame($declarationOfIndependence->isMillenniumBefore($declarationOfIndependence->plusSeconds(1)), false, __LINE__);
assertSame($declarationOfIndependence->isMillenniumBefore($declarationOfIndependence), false, __LINE__);

assertSame($declarationOfIndependence->isAfter($declarationOfIndependence->minusSeconds(1)), true, __LINE__);
assertSame($declarationOfIndependence->isAfter($declarationOfIndependence), false, __LINE__);
assertSame($declarationOfIndependence->isMinuteAfter($declarationOfIndependence->minusMinutes(1)), true, __LINE__);
assertSame($declarationOfIndependence->isMinuteAfter($declarationOfIndependence->minusSeconds(1)), false, __LINE__);
assertSame($declarationOfIndependence->isMinuteAfter($declarationOfIndependence), false, __LINE__);
assertSame($declarationOfIndependence->isHourAfter($declarationOfIndependence->minusHours(1)), true, __LINE__);
assertSame($declarationOfIndependence->isHourAfter($declarationOfIndependence->minusMinutes(1)), false, __LINE__);
assertSame($declarationOfIndependence->isHourAfter($declarationOfIndependence->minusSeconds(1)), false, __LINE__);
assertSame($declarationOfIndependence->isHourAfter($declarationOfIndependence), false, __LINE__);
assertSame($declarationOfIndependence->isDayAfter($declarationOfIndependence->minusDays(1)), true, __LINE__);
assertSame($declarationOfIndependence->isDayAfter($declarationOfIndependence->minusHours(1)), false, __LINE__);
assertSame($declarationOfIndependence->isDayAfter($declarationOfIndependence->minusMinutes(1)), false, __LINE__);
assertSame($declarationOfIndependence->isDayAfter($declarationOfIndependence->minusSeconds(1)), false, __LINE__);
assertSame($declarationOfIndependence->isDayAfter($declarationOfIndependence), false, __LINE__);
assertSame($declarationOfIndependence->isMonthAfter($declarationOfIndependence->minusMonths(1)), true, __LINE__);
assertSame($declarationOfIndependence->isMonthAfter($declarationOfIndependence->minusDays(1)), false, __LINE__);
assertSame($declarationOfIndependence->isMonthAfter($declarationOfIndependence->minusHours(1)), false, __LINE__);
assertSame($declarationOfIndependence->isMonthAfter($declarationOfIndependence->minusMinutes(1)), false, __LINE__);
assertSame($declarationOfIndependence->isMonthAfter($declarationOfIndependence->minusSeconds(1)), false, __LINE__);
assertSame($declarationOfIndependence->isMonthAfter($declarationOfIndependence), false, __LINE__);
assertSame($declarationOfIndependence->isYearAfter($declarationOfIndependence->minusYears(1)), true, __LINE__);
assertSame($declarationOfIndependence->isYearAfter($declarationOfIndependence->minusMonths(1)), false, __LINE__);
assertSame($declarationOfIndependence->isYearAfter($declarationOfIndependence->minusDays(1)), false, __LINE__);
assertSame($declarationOfIndependence->isYearAfter($declarationOfIndependence->minusHours(1)), false, __LINE__);
assertSame($declarationOfIndependence->isYearAfter($declarationOfIndependence->minusMinutes(1)), false, __LINE__);
assertSame($declarationOfIndependence->isYearAfter($declarationOfIndependence->minusSeconds(1)), false, __LINE__);
assertSame($declarationOfIndependence->isYearAfter($declarationOfIndependence), false, __LINE__);
assertSame($declarationOfIndependence->isDecadeAfter($declarationOfIndependence->minusYears(10)), true, __LINE__);
assertSame($declarationOfIndependence->isDecadeAfter($declarationOfIndependence->minusYears(1)), false, __LINE__);
assertSame($declarationOfIndependence->isDecadeAfter($declarationOfIndependence->minusMonths(1)), false, __LINE__);
assertSame($declarationOfIndependence->isDecadeAfter($declarationOfIndependence->minusDays(1)), false, __LINE__);
assertSame($declarationOfIndependence->isDecadeAfter($declarationOfIndependence->minusHours(1)), false, __LINE__);
assertSame($declarationOfIndependence->isDecadeAfter($declarationOfIndependence->minusMinutes(1)), false, __LINE__);
assertSame($declarationOfIndependence->isDecadeAfter($declarationOfIndependence->minusSeconds(1)), false, __LINE__);
assertSame($declarationOfIndependence->isDecadeAfter($declarationOfIndependence), false, __LINE__);
assertSame($declarationOfIndependence->isCenturyAfter($declarationOfIndependence->minusYears(100)), true, __LINE__);
assertSame($declarationOfIndependence->isCenturyAfter($declarationOfIndependence->minusYears(10)), false, __LINE__);
assertSame($declarationOfIndependence->isCenturyAfter($declarationOfIndependence->minusYears(1)), false, __LINE__);
assertSame($declarationOfIndependence->isCenturyAfter($declarationOfIndependence->minusMonths(1)), false, __LINE__);
assertSame($declarationOfIndependence->isCenturyAfter($declarationOfIndependence->minusDays(1)), false, __LINE__);
assertSame($declarationOfIndependence->isCenturyAfter($declarationOfIndependence->minusHours(1)), false, __LINE__);
assertSame($declarationOfIndependence->isCenturyAfter($declarationOfIndependence->minusMinutes(1)), false, __LINE__);
assertSame($declarationOfIndependence->isCenturyAfter($declarationOfIndependence->minusSeconds(1)), false, __LINE__);
assertSame($declarationOfIndependence->isCenturyAfter($declarationOfIndependence), false, __LINE__);
assertSame($declarationOfIndependence->isMillenniumAfter($declarationOfIndependence->minusYears(1000)), true, __LINE__);
assertSame($declarationOfIndependence->isMillenniumAfter($declarationOfIndependence->minusYears(100)), false, __LINE__);
assertSame($declarationOfIndependence->isMillenniumAfter($declarationOfIndependence->minusYears(10)), false, __LINE__);
assertSame($declarationOfIndependence->isMillenniumAfter($declarationOfIndependence->minusYears(1)), false, __LINE__);
assertSame($declarationOfIndependence->isMillenniumAfter($declarationOfIndependence->minusMonths(1)), false, __LINE__);
assertSame($declarationOfIndependence->isMillenniumAfter($declarationOfIndependence->minusDays(1)), false, __LINE__);
assertSame($declarationOfIndependence->isMillenniumAfter($declarationOfIndependence->minusHours(1)), false, __LINE__);
assertSame($declarationOfIndependence->isMillenniumAfter($declarationOfIndependence->minusMinutes(1)), false, __LINE__);
assertSame($declarationOfIndependence->isMillenniumAfter($declarationOfIndependence->minusSeconds(1)), false, __LINE__);
assertSame($declarationOfIndependence->isMillenniumAfter($declarationOfIndependence), false, __LINE__);

assertSame($declarationOfIndependence->isBeforeOrSame($declarationOfIndependence->minusSeconds(1)), false, __LINE__);
assertSame($declarationOfIndependence->isBeforeOrSame($declarationOfIndependence->plusSeconds(1)), true, __LINE__);
assertSame($declarationOfIndependence->isBeforeOrSame($declarationOfIndependence), true, __LINE__);
assertSame($declarationOfIndependence->isMinuteBeforeOrSame($declarationOfIndependence->minusMinutes(1)), false, __LINE__);
assertSame($declarationOfIndependence->isMinuteBeforeOrSame($declarationOfIndependence->plusMinutes(1)), true, __LINE__);
assertSame($declarationOfIndependence->isMinuteBeforeOrSame($declarationOfIndependence->minusSeconds(1)), true, __LINE__);
assertSame($declarationOfIndependence->isMinuteBeforeOrSame($declarationOfIndependence), true, __LINE__);
assertSame($declarationOfIndependence->isHourBeforeOrSame($declarationOfIndependence->minusHours(1)), false, __LINE__);
assertSame($declarationOfIndependence->isHourBeforeOrSame($declarationOfIndependence->plusHours(1)), true, __LINE__);
assertSame($declarationOfIndependence->isHourBeforeOrSame($declarationOfIndependence->minusMinutes(1)), true, __LINE__);
assertSame($declarationOfIndependence->isHourBeforeOrSame($declarationOfIndependence->minusSeconds(1)), true, __LINE__);
assertSame($declarationOfIndependence->isHourBeforeOrSame($declarationOfIndependence), true, __LINE__);
assertSame($declarationOfIndependence->isDayBeforeOrSame($declarationOfIndependence->minusDays(1)), false, __LINE__);
assertSame($declarationOfIndependence->isDayBeforeOrSame($declarationOfIndependence->plusDays(1)), true, __LINE__);
assertSame($declarationOfIndependence->isDayBeforeOrSame($declarationOfIndependence->minusHours(1)), true, __LINE__);
assertSame($declarationOfIndependence->isDayBeforeOrSame($declarationOfIndependence->minusMinutes(1)), true, __LINE__);
assertSame($declarationOfIndependence->isDayBeforeOrSame($declarationOfIndependence->minusSeconds(1)), true, __LINE__);
assertSame($declarationOfIndependence->isDayBeforeOrSame($declarationOfIndependence), true, __LINE__);
assertSame($declarationOfIndependence->isMonthBeforeOrSame($declarationOfIndependence->minusMonths(1)), false, __LINE__);
assertSame($declarationOfIndependence->isMonthBeforeOrSame($declarationOfIndependence->plusMonths(1)), true, __LINE__);
assertSame($declarationOfIndependence->isMonthBeforeOrSame($declarationOfIndependence->minusDays(1)), true, __LINE__);
assertSame($declarationOfIndependence->isMonthBeforeOrSame($declarationOfIndependence->minusHours(1)), true, __LINE__);
assertSame($declarationOfIndependence->isMonthBeforeOrSame($declarationOfIndependence->minusMinutes(1)), true, __LINE__);
assertSame($declarationOfIndependence->isMonthBeforeOrSame($declarationOfIndependence->minusSeconds(1)), true, __LINE__);
assertSame($declarationOfIndependence->isMonthBeforeOrSame($declarationOfIndependence), true, __LINE__);
assertSame($declarationOfIndependence->isYearBeforeOrSame($declarationOfIndependence->minusYears(1)), false, __LINE__);
assertSame($declarationOfIndependence->isYearBeforeOrSame($declarationOfIndependence->plusYears(1)), true, __LINE__);
assertSame($declarationOfIndependence->isYearBeforeOrSame($declarationOfIndependence->minusMonths(1)), true, __LINE__);
assertSame($declarationOfIndependence->isYearBeforeOrSame($declarationOfIndependence->minusDays(1)), true, __LINE__);
assertSame($declarationOfIndependence->isYearBeforeOrSame($declarationOfIndependence->minusHours(1)), true, __LINE__);
assertSame($declarationOfIndependence->isYearBeforeOrSame($declarationOfIndependence->minusMinutes(1)), true, __LINE__);
assertSame($declarationOfIndependence->isYearBeforeOrSame($declarationOfIndependence->minusSeconds(1)), true, __LINE__);
assertSame($declarationOfIndependence->isYearBeforeOrSame($declarationOfIndependence), true, __LINE__);
assertSame($declarationOfIndependence->isDecadeBeforeOrSame($declarationOfIndependence->minusYears(10)), false, __LINE__);
assertSame($declarationOfIndependence->isDecadeBeforeOrSame($declarationOfIndependence->plusYears(10)), true, __LINE__);
assertSame($declarationOfIndependence->isDecadeBeforeOrSame($declarationOfIndependence->minusYears(1)), true, __LINE__);
assertSame($declarationOfIndependence->isDecadeBeforeOrSame($declarationOfIndependence->minusMonths(1)), true, __LINE__);
assertSame($declarationOfIndependence->isDecadeBeforeOrSame($declarationOfIndependence->minusDays(1)), true, __LINE__);
assertSame($declarationOfIndependence->isDecadeBeforeOrSame($declarationOfIndependence->minusHours(1)), true, __LINE__);
assertSame($declarationOfIndependence->isDecadeBeforeOrSame($declarationOfIndependence->minusMinutes(1)), true, __LINE__);
assertSame($declarationOfIndependence->isDecadeBeforeOrSame($declarationOfIndependence->minusSeconds(1)), true, __LINE__);
assertSame($declarationOfIndependence->isDecadeBeforeOrSame($declarationOfIndependence), true, __LINE__);
assertSame($declarationOfIndependence->isCenturyBeforeOrSame($declarationOfIndependence->minusYears(100)), false, __LINE__);
assertSame($declarationOfIndependence->isCenturyBeforeOrSame($declarationOfIndependence->plusYears(100)), true, __LINE__);
assertSame($declarationOfIndependence->isCenturyBeforeOrSame($declarationOfIndependence->minusYears(10)), true, __LINE__);
assertSame($declarationOfIndependence->isCenturyBeforeOrSame($declarationOfIndependence->minusYears(1)), true, __LINE__);
assertSame($declarationOfIndependence->isCenturyBeforeOrSame($declarationOfIndependence->minusMonths(1)), true, __LINE__);
assertSame($declarationOfIndependence->isCenturyBeforeOrSame($declarationOfIndependence->minusDays(1)), true, __LINE__);
assertSame($declarationOfIndependence->isCenturyBeforeOrSame($declarationOfIndependence->minusHours(1)), true, __LINE__);
assertSame($declarationOfIndependence->isCenturyBeforeOrSame($declarationOfIndependence->minusMinutes(1)), true, __LINE__);
assertSame($declarationOfIndependence->isCenturyBeforeOrSame($declarationOfIndependence->minusSeconds(1)), true, __LINE__);
assertSame($declarationOfIndependence->isCenturyBeforeOrSame($declarationOfIndependence), true, __LINE__);
assertSame($declarationOfIndependence->isMillenniumBeforeOrSame($declarationOfIndependence->minusYears(1000)), false, __LINE__);
assertSame($declarationOfIndependence->isMillenniumBeforeOrSame($declarationOfIndependence->plusYears(1000)), true, __LINE__);
assertSame($declarationOfIndependence->isMillenniumBeforeOrSame($declarationOfIndependence->minusYears(100)), true, __LINE__);
assertSame($declarationOfIndependence->isMillenniumBeforeOrSame($declarationOfIndependence->minusYears(10)), true, __LINE__);
assertSame($declarationOfIndependence->isMillenniumBeforeOrSame($declarationOfIndependence->minusYears(1)), true, __LINE__);
assertSame($declarationOfIndependence->isMillenniumBeforeOrSame($declarationOfIndependence->minusMonths(1)), true, __LINE__);
assertSame($declarationOfIndependence->isMillenniumBeforeOrSame($declarationOfIndependence->minusDays(1)), true, __LINE__);
assertSame($declarationOfIndependence->isMillenniumBeforeOrSame($declarationOfIndependence->minusHours(1)), true, __LINE__);
assertSame($declarationOfIndependence->isMillenniumBeforeOrSame($declarationOfIndependence->minusMinutes(1)), true, __LINE__);
assertSame($declarationOfIndependence->isMillenniumBeforeOrSame($declarationOfIndependence->minusSeconds(1)), true, __LINE__);
assertSame($declarationOfIndependence->isMillenniumBeforeOrSame($declarationOfIndependence), true, __LINE__);

assertSame($declarationOfIndependence->isAfterOrSame($declarationOfIndependence->plusSeconds(1)), false, __LINE__);
assertSame($declarationOfIndependence->isAfterOrSame($declarationOfIndependence->minusSeconds(1)), true, __LINE__);
assertSame($declarationOfIndependence->isAfterOrSame($declarationOfIndependence), true, __LINE__);
assertSame($declarationOfIndependence->isMinuteAfterOrSame($declarationOfIndependence->plusMinutes(1)), false, __LINE__);
assertSame($declarationOfIndependence->isMinuteAfterOrSame($declarationOfIndependence->minusMinutes(1)), true, __LINE__);
assertSame($declarationOfIndependence->isMinuteAfterOrSame($declarationOfIndependence->plusSeconds(1)), true, __LINE__);
assertSame($declarationOfIndependence->isMinuteAfterOrSame($declarationOfIndependence), true, __LINE__);
assertSame($declarationOfIndependence->isHourAfterOrSame($declarationOfIndependence->plusHours(1)), false, __LINE__);
assertSame($declarationOfIndependence->isHourAfterOrSame($declarationOfIndependence->minusHours(1)), true, __LINE__);
assertSame($declarationOfIndependence->isHourAfterOrSame($declarationOfIndependence->plusMinutes(1)), true, __LINE__);
assertSame($declarationOfIndependence->isHourAfterOrSame($declarationOfIndependence->plusSeconds(1)), true, __LINE__);
assertSame($declarationOfIndependence->isHourAfterOrSame($declarationOfIndependence), true, __LINE__);
assertSame($declarationOfIndependence->isDayAfterOrSame($declarationOfIndependence->plusDays(1)), false, __LINE__);
assertSame($declarationOfIndependence->isDayAfterOrSame($declarationOfIndependence->minusDays(1)), true, __LINE__);
assertSame($declarationOfIndependence->isDayAfterOrSame($declarationOfIndependence->plusHours(1)), true, __LINE__);
assertSame($declarationOfIndependence->isDayAfterOrSame($declarationOfIndependence->plusMinutes(1)), true, __LINE__);
assertSame($declarationOfIndependence->isDayAfterOrSame($declarationOfIndependence->plusSeconds(1)), true, __LINE__);
assertSame($declarationOfIndependence->isDayAfterOrSame($declarationOfIndependence), true, __LINE__);
assertSame($declarationOfIndependence->isMonthAfterOrSame($declarationOfIndependence->plusMonths(1)), false, __LINE__);
assertSame($declarationOfIndependence->isMonthAfterOrSame($declarationOfIndependence->minusMonths(1)), true, __LINE__);
assertSame($declarationOfIndependence->isMonthAfterOrSame($declarationOfIndependence->plusDays(1)), true, __LINE__);
assertSame($declarationOfIndependence->isMonthAfterOrSame($declarationOfIndependence->plusHours(1)), true, __LINE__);
assertSame($declarationOfIndependence->isMonthAfterOrSame($declarationOfIndependence->plusMinutes(1)), true, __LINE__);
assertSame($declarationOfIndependence->isMonthAfterOrSame($declarationOfIndependence->plusSeconds(1)), true, __LINE__);
assertSame($declarationOfIndependence->isMonthAfterOrSame($declarationOfIndependence), true, __LINE__);
assertSame($declarationOfIndependence->isYearAfterOrSame($declarationOfIndependence->plusYears(1)), false, __LINE__);
assertSame($declarationOfIndependence->isYearAfterOrSame($declarationOfIndependence->minusYears(1)), true, __LINE__);
assertSame($declarationOfIndependence->isYearAfterOrSame($declarationOfIndependence->plusMonths(1)), true, __LINE__);
assertSame($declarationOfIndependence->isYearAfterOrSame($declarationOfIndependence->plusDays(1)), true, __LINE__);
assertSame($declarationOfIndependence->isYearAfterOrSame($declarationOfIndependence->plusHours(1)), true, __LINE__);
assertSame($declarationOfIndependence->isYearAfterOrSame($declarationOfIndependence->plusMinutes(1)), true, __LINE__);
assertSame($declarationOfIndependence->isYearAfterOrSame($declarationOfIndependence->plusSeconds(1)), true, __LINE__);
assertSame($declarationOfIndependence->isYearAfterOrSame($declarationOfIndependence), true, __LINE__);
assertSame($declarationOfIndependence->isDecadeAfterOrSame($declarationOfIndependence->plusYears(10)), false, __LINE__);
assertSame($declarationOfIndependence->isDecadeAfterOrSame($declarationOfIndependence->minusYears(10)), true, __LINE__);
assertSame($declarationOfIndependence->isDecadeAfterOrSame($declarationOfIndependence->plusYears(1)), true, __LINE__);
assertSame($declarationOfIndependence->isDecadeAfterOrSame($declarationOfIndependence->plusMonths(1)), true, __LINE__);
assertSame($declarationOfIndependence->isDecadeAfterOrSame($declarationOfIndependence->plusDays(1)), true, __LINE__);
assertSame($declarationOfIndependence->isDecadeAfterOrSame($declarationOfIndependence->plusHours(1)), true, __LINE__);
assertSame($declarationOfIndependence->isDecadeAfterOrSame($declarationOfIndependence->plusMinutes(1)), true, __LINE__);
assertSame($declarationOfIndependence->isDecadeAfterOrSame($declarationOfIndependence->plusSeconds(1)), true, __LINE__);
assertSame($declarationOfIndependence->isDecadeAfterOrSame($declarationOfIndependence), true, __LINE__);
assertSame($declarationOfIndependence->isCenturyAfterOrSame($declarationOfIndependence->plusYears(100)), false, __LINE__);
assertSame($declarationOfIndependence->isCenturyAfterOrSame($declarationOfIndependence->minusYears(100)), true, __LINE__);
assertSame($declarationOfIndependence->isCenturyAfterOrSame($declarationOfIndependence->plusYears(10)), true, __LINE__);
assertSame($declarationOfIndependence->isCenturyAfterOrSame($declarationOfIndependence->plusYears(1)), true, __LINE__);
assertSame($declarationOfIndependence->isCenturyAfterOrSame($declarationOfIndependence->plusMonths(1)), true, __LINE__);
assertSame($declarationOfIndependence->isCenturyAfterOrSame($declarationOfIndependence->plusDays(1)), true, __LINE__);
assertSame($declarationOfIndependence->isCenturyAfterOrSame($declarationOfIndependence->plusHours(1)), true, __LINE__);
assertSame($declarationOfIndependence->isCenturyAfterOrSame($declarationOfIndependence->plusMinutes(1)), true, __LINE__);
assertSame($declarationOfIndependence->isCenturyAfterOrSame($declarationOfIndependence->plusSeconds(1)), true, __LINE__);
assertSame($declarationOfIndependence->isCenturyAfterOrSame($declarationOfIndependence), true, __LINE__);
assertSame($declarationOfIndependence->isMillenniumAfterOrSame($declarationOfIndependence->plusYears(1000)), false, __LINE__);
assertSame($declarationOfIndependence->isMillenniumAfterOrSame($declarationOfIndependence->minusYears(1000)), true, __LINE__);
assertSame($declarationOfIndependence->isMillenniumAfterOrSame($declarationOfIndependence->plusYears(100)), true, __LINE__);
assertSame($declarationOfIndependence->isMillenniumAfterOrSame($declarationOfIndependence->plusYears(10)), true, __LINE__);
assertSame($declarationOfIndependence->isMillenniumAfterOrSame($declarationOfIndependence->plusYears(1)), true, __LINE__);
assertSame($declarationOfIndependence->isMillenniumAfterOrSame($declarationOfIndependence->plusMonths(1)), true, __LINE__);
assertSame($declarationOfIndependence->isMillenniumAfterOrSame($declarationOfIndependence->plusDays(1)), true, __LINE__);
assertSame($declarationOfIndependence->isMillenniumAfterOrSame($declarationOfIndependence->plusHours(1)), true, __LINE__);
assertSame($declarationOfIndependence->isMillenniumAfterOrSame($declarationOfIndependence->plusMinutes(1)), true, __LINE__);
assertSame($declarationOfIndependence->isMillenniumAfterOrSame($declarationOfIndependence->plusSeconds(1)), true, __LINE__);
assertSame($declarationOfIndependence->isMillenniumAfterOrSame($declarationOfIndependence), true, __LINE__);

assertSame($now->minusSeconds(1)->isPast(), true, __LINE__);
assertSame($now->isPast(), false, __LINE__);
assertSame($now->minusMinutes(1)->isPastMinute(), true, __LINE__);
assertSame($now->minusSeconds(1)->isPastMinute(), false, __LINE__);
assertSame($now->isPastMinute(), false, __LINE__);
assertSame($now->minusHours(1)->isPastHour(), true, __LINE__);
assertSame($now->minusMinutes(1)->isPastHour(), false, __LINE__);
assertSame($now->minusSeconds(1)->isPastHour(), false, __LINE__);
assertSame($now->isPastHour(), false, __LINE__);
assertSame($now->minusDays(1)->isPastDay(), true, __LINE__);
assertSame($now->minusHours(1)->isPastDay(), false, __LINE__);
assertSame($now->minusMinutes(1)->isPastDay(), false, __LINE__);
assertSame($now->minusSeconds(1)->isPastDay(), false, __LINE__);
assertSame($now->isPastDay(), false, __LINE__);
assertSame($now->minusMonths(1)->isPastMonth(), true, __LINE__);
assertSame($now->minusDays(1)->isPastMonth(), false, __LINE__);
assertSame($now->minusHours(1)->isPastMonth(), false, __LINE__);
assertSame($now->minusMinutes(1)->isPastMonth(), false, __LINE__);
assertSame($now->minusSeconds(1)->isPastMonth(), false, __LINE__);
assertSame($now->isPastMonth(), false, __LINE__);
assertSame($now->minusYears(1)->isPastYear(), true, __LINE__);
assertSame($now->minusMonths(1)->isPastYear(), false, __LINE__);
assertSame($now->minusDays(1)->isPastYear(), false, __LINE__);
assertSame($now->minusHours(1)->isPastYear(), false, __LINE__);
assertSame($now->minusMinutes(1)->isPastYear(), false, __LINE__);
assertSame($now->minusSeconds(1)->isPastYear(), false, __LINE__);
assertSame($now->isPastYear(), false, __LINE__);
assertSame($now->minusYears(10)->isPastDecade(), true, __LINE__);
assertSame($now->minusYears(1)->isPastDecade(), false, __LINE__);
assertSame($now->minusMonths(1)->isPastDecade(), false, __LINE__);
assertSame($now->minusDays(1)->isPastDecade(), false, __LINE__);
assertSame($now->minusHours(1)->isPastDecade(), false, __LINE__);
assertSame($now->minusMinutes(1)->isPastDecade(), false, __LINE__);
assertSame($now->minusSeconds(1)->isPastDecade(), false, __LINE__);
assertSame($now->isPastDecade(), false, __LINE__);
assertSame($now->minusYears(100)->isPastCentury(), true, __LINE__);
assertSame($now->minusYears(10)->isPastCentury(), false, __LINE__);
assertSame($now->minusYears(1)->isPastCentury(), false, __LINE__);
assertSame($now->minusMonths(1)->isPastCentury(), false, __LINE__);
assertSame($now->minusDays(1)->isPastCentury(), false, __LINE__);
assertSame($now->minusHours(1)->isPastCentury(), false, __LINE__);
assertSame($now->minusMinutes(1)->isPastCentury(), false, __LINE__);
assertSame($now->minusSeconds(1)->isPastCentury(), false, __LINE__);
assertSame($now->isPastCentury(), false, __LINE__);
assertSame($now->minusYears(1000)->isPastMillennium(), true, __LINE__);
assertSame($now->minusYears(100)->isPastMillennium(), false, __LINE__);
assertSame($now->minusYears(10)->isPastMillennium(), false, __LINE__);
assertSame($now->minusYears(1)->isPastMillennium(), false, __LINE__);
assertSame($now->minusMonths(1)->isPastMillennium(), false, __LINE__);
assertSame($now->minusDays(1)->isPastMillennium(), false, __LINE__);
assertSame($now->minusHours(1)->isPastMillennium(), false, __LINE__);
assertSame($now->minusMinutes(1)->isPastMillennium(), false, __LINE__);
assertSame($now->minusSeconds(1)->isPastMillennium(), false, __LINE__);
assertSame($now->isPastMillennium(), false, __LINE__);

assertSame($now->plusSeconds(1)->isFuture(), true, __LINE__);
assertSame($now->isFuture(), false, __LINE__);
assertSame($now->plusMinutes(1)->isFutureMinute(), true, __LINE__);
assertSame($now->plusSeconds(1)->isFutureMinute(), false, __LINE__);
assertSame($now->isFutureMinute(), false, __LINE__);
assertSame($now->plusHours(1)->isFutureHour(), true, __LINE__);
assertSame($now->plusMinutes(1)->isFutureHour(), false, __LINE__);
assertSame($now->plusSeconds(1)->isFutureHour(), false, __LINE__);
assertSame($now->isFutureHour(), false, __LINE__);
assertSame($now->plusDays(1)->isFutureDay(), true, __LINE__);
assertSame($now->plusHours(1)->isFutureDay(), false, __LINE__);
assertSame($now->plusMinutes(1)->isFutureDay(), false, __LINE__);
assertSame($now->plusSeconds(1)->isFutureDay(), false, __LINE__);
assertSame($now->isFutureDay(), false, __LINE__);
assertSame($now->plusMonths(1)->isFutureMonth(), true, __LINE__);
assertSame($now->plusDays(1)->isFutureMonth(), false, __LINE__);
assertSame($now->plusHours(1)->isFutureMonth(), false, __LINE__);
assertSame($now->plusMinutes(1)->isFutureMonth(), false, __LINE__);
assertSame($now->plusSeconds(1)->isFutureMonth(), false, __LINE__);
assertSame($now->isFutureMonth(), false, __LINE__);
assertSame($now->plusYears(1)->isFutureYear(), true, __LINE__);
assertSame($now->plusMonths(1)->isFutureYear(), false, __LINE__);
assertSame($now->plusDays(1)->isFutureYear(), false, __LINE__);
assertSame($now->plusHours(1)->isFutureYear(), false, __LINE__);
assertSame($now->plusMinutes(1)->isFutureYear(), false, __LINE__);
assertSame($now->plusSeconds(1)->isFutureYear(), false, __LINE__);
assertSame($now->isFutureYear(), false, __LINE__);
assertSame($now->plusYears(10)->isFutureDecade(), true, __LINE__);
assertSame($now->plusYears(1)->isFutureDecade(), false, __LINE__);
assertSame($now->plusMonths(1)->isFutureDecade(), false, __LINE__);
assertSame($now->plusDays(1)->isFutureDecade(), false, __LINE__);
assertSame($now->plusHours(1)->isFutureDecade(), false, __LINE__);
assertSame($now->plusMinutes(1)->isFutureDecade(), false, __LINE__);
assertSame($now->plusSeconds(1)->isFutureDecade(), false, __LINE__);
assertSame($now->isFutureDecade(), false, __LINE__);
assertSame($now->plusYears(100)->isFutureCentury(), true, __LINE__);
assertSame($now->plusYears(10)->isFutureCentury(), false, __LINE__);
assertSame($now->plusYears(1)->isFutureCentury(), false, __LINE__);
assertSame($now->plusMonths(1)->isFutureCentury(), false, __LINE__);
assertSame($now->plusDays(1)->isFutureCentury(), false, __LINE__);
assertSame($now->plusHours(1)->isFutureCentury(), false, __LINE__);
assertSame($now->plusMinutes(1)->isFutureCentury(), false, __LINE__);
assertSame($now->plusSeconds(1)->isFutureCentury(), false, __LINE__);
assertSame($now->isFutureCentury(), false, __LINE__);
assertSame($now->plusYears(1000)->isFutureMillennium(), true, __LINE__);
assertSame($now->plusYears(100)->isFutureMillennium(), false, __LINE__);
assertSame($now->plusYears(10)->isFutureMillennium(), false, __LINE__);
assertSame($now->plusYears(1)->isFutureMillennium(), false, __LINE__);
assertSame($now->plusMonths(1)->isFutureMillennium(), false, __LINE__);
assertSame($now->plusDays(1)->isFutureMillennium(), false, __LINE__);
assertSame($now->plusHours(1)->isFutureMillennium(), false, __LINE__);
assertSame($now->plusMinutes(1)->isFutureMillennium(), false, __LINE__);
assertSame($now->plusSeconds(1)->isFutureMillennium(), false, __LINE__);
assertSame($now->isFutureMillennium(), false, __LINE__);

assertSame($now->minusHours(28)->isToday(), false, __LINE__);
assertSame($now->minusHours(4)->isToday(), true, __LINE__);
assertSame($now->isToday(), true, __LINE__);
assertSame($now->plusHours(4)->isToday(), true, __LINE__);
assertSame($now->plusHours(28)->isToday(), false, __LINE__);

assertSame($now->minusHours(28)->isYesterday(), true, __LINE__);
assertSame($now->minusHours(4)->isYesterday(), false, __LINE__);
assertSame($now->isYesterday(), false, __LINE__);
assertSame($now->plusHours(4)->isYesterday(), false, __LINE__);
assertSame($now->plusHours(28)->isYesterday(), false, __LINE__);

assertSame($now->minusHours(28)->isTomorrow(), false, __LINE__);
assertSame($now->minusHours(4)->isTomorrow(), false, __LINE__);
assertSame($now->isTomorrow(), false, __LINE__);
assertSame($now->plusHours(4)->isTomorrow(), false, __LINE__);
assertSame($now->plusHours(28)->isTomorrow(), true, __LINE__);

assertSame($now->plusYears(7)->minusHours(28)->isAnniversary(), false, __LINE__);
assertSame($now->plusYears(7)->minusHours(4)->isAnniversary(), true, __LINE__);
assertSame($now->minusHours(28)->isAnniversary(), false, __LINE__);
assertSame($now->minusHours(4)->isAnniversary(), true, __LINE__);
assertSame($now->plusYears(7)->isAnniversary(), true, __LINE__);
assertSame($now->isAnniversary(), true, __LINE__);
assertSame($now->minusYears(7)->isAnniversary(), true, __LINE__);
assertSame($now->plusHours(4)->isAnniversary(), true, __LINE__);
assertSame($now->plusHours(28)->isAnniversary(), false, __LINE__);
assertSame($now->minusYears(7)->plusHours(4)->isAnniversary(), true, __LINE__);
assertSame($now->minusYears(7)->plusHours(28)->isAnniversary(), false, __LINE__);

assertSame($now->minusDays(6)->isLastWeek(), true, __LINE__);
assertSame($now->minusDays(5)->isLastWeek(), true, __LINE__);
assertSame($now->minusDays(4)->isLastWeek(), false, __LINE__);
assertSame($now->minusDays(3)->isLastWeek(), false, __LINE__);
assertSame($now->plusDays(1)->isLastWeek(), false, __LINE__);
assertSame($now->plusDays(2)->isLastWeek(), false, __LINE__);
assertSame($now->plusDays(3)->isLastWeek(), false, __LINE__);
assertSame($now->plusDays(4)->isLastWeek(), false, __LINE__);
assertSame($now->minusDays(6)->isThisWeek(), false, __LINE__);
assertSame($now->minusDays(5)->isThisWeek(), false, __LINE__);
assertSame($now->minusDays(4)->isThisWeek(), true, __LINE__);
assertSame($now->minusDays(3)->isThisWeek(), true, __LINE__);
assertSame($now->plusDays(1)->isThisWeek(), true, __LINE__);
assertSame($now->plusDays(2)->isThisWeek(), true, __LINE__);
assertSame($now->plusDays(3)->isThisWeek(), false, __LINE__);
assertSame($now->plusDays(4)->isThisWeek(), false, __LINE__);
assertSame($now->minusDays(6)->isNextWeek(), false, __LINE__);
assertSame($now->minusDays(5)->isNextWeek(), false, __LINE__);
assertSame($now->minusDays(4)->isNextWeek(), false, __LINE__);
assertSame($now->minusDays(3)->isNextWeek(), false, __LINE__);
assertSame($now->plusDays(1)->isNextWeek(), false, __LINE__);
assertSame($now->plusDays(2)->isNextWeek(), false, __LINE__);
assertSame($now->plusDays(3)->isNextWeek(), true, __LINE__);
assertSame($now->plusDays(4)->isNextWeek(), true, __LINE__);

assertSame($now->minusDays(16)->isLastMonth(), true, __LINE__);
assertSame($now->minusDays(15)->isLastMonth(), true, __LINE__);
assertSame($now->minusDays(14)->isLastMonth(), false, __LINE__);
assertSame($now->minusDays(13)->isLastMonth(), false, __LINE__);
assertSame($now->plusDays(14)->isLastMonth(), false, __LINE__);
assertSame($now->plusDays(15)->isLastMonth(), false, __LINE__);
assertSame($now->plusDays(16)->isLastMonth(), false, __LINE__);
assertSame($now->plusDays(17)->isLastMonth(), false, __LINE__);
assertSame($now->minusDays(16)->isThisMonth(), false, __LINE__);
assertSame($now->minusDays(15)->isThisMonth(), false, __LINE__);
assertSame($now->minusDays(14)->isThisMonth(), true, __LINE__);
assertSame($now->minusDays(13)->isThisMonth(), true, __LINE__);
assertSame($now->plusDays(14)->isThisMonth(), true, __LINE__);
assertSame($now->plusDays(15)->isThisMonth(), true, __LINE__);
assertSame($now->plusDays(16)->isThisMonth(), false, __LINE__);
assertSame($now->plusDays(17)->isThisMonth(), false, __LINE__);
assertSame($now->minusDays(16)->isNextMonth(), false, __LINE__);
assertSame($now->minusDays(15)->isNextMonth(), false, __LINE__);
assertSame($now->minusDays(14)->isNextMonth(), false, __LINE__);
assertSame($now->minusDays(13)->isNextMonth(), false, __LINE__);
assertSame($now->plusDays(14)->isNextMonth(), false, __LINE__);
assertSame($now->plusDays(15)->isNextMonth(), false, __LINE__);
assertSame($now->plusDays(16)->isNextMonth(), true, __LINE__);
assertSame($now->plusDays(17)->isNextMonth(), true, __LINE__);

assertSame($now->minusMonths(7)->isLastYear(), true, __LINE__);
assertSame($now->minusMonths(6)->isLastYear(), true, __LINE__);
assertSame($now->minusMonths(5)->isLastYear(), false, __LINE__);
assertSame($now->minusMonths(4)->isLastYear(), false, __LINE__);
assertSame($now->plusMonths(5)->isLastYear(), false, __LINE__);
assertSame($now->plusMonths(6)->isLastYear(), false, __LINE__);
assertSame($now->plusMonths(7)->isLastYear(), false, __LINE__);
assertSame($now->plusMonths(8)->isLastYear(), false, __LINE__);
assertSame($now->minusMonths(7)->isThisYear(), false, __LINE__);
assertSame($now->minusMonths(6)->isThisYear(), false, __LINE__);
assertSame($now->minusMonths(5)->isThisYear(), true, __LINE__);
assertSame($now->minusMonths(4)->isThisYear(), true, __LINE__);
assertSame($now->plusMonths(5)->isThisYear(), true, __LINE__);
assertSame($now->plusMonths(6)->isThisYear(), true, __LINE__);
assertSame($now->plusMonths(7)->isThisYear(), false, __LINE__);
assertSame($now->plusMonths(8)->isThisYear(), false, __LINE__);
assertSame($now->minusMonths(7)->isNextYear(), false, __LINE__);
assertSame($now->minusMonths(6)->isNextYear(), false, __LINE__);
assertSame($now->minusMonths(5)->isNextYear(), false, __LINE__);
assertSame($now->minusMonths(4)->isNextYear(), false, __LINE__);
assertSame($now->plusMonths(5)->isNextYear(), false, __LINE__);
assertSame($now->plusMonths(6)->isNextYear(), false, __LINE__);
assertSame($now->plusMonths(7)->isNextYear(), true, __LINE__);
assertSame($now->plusMonths(8)->isNextYear(), true, __LINE__);

assertSame($now->minusYears(7)->isLastDecade(), true, __LINE__);
assertSame($now->minusYears(6)->isLastDecade(), true, __LINE__);
assertSame($now->minusYears(5)->isLastDecade(), false, __LINE__);
assertSame($now->minusYears(4)->isLastDecade(), false, __LINE__);
assertSame($now->plusYears(3)->isLastDecade(), false, __LINE__);
assertSame($now->plusYears(4)->isLastDecade(), false, __LINE__);
assertSame($now->plusYears(5)->isLastDecade(), false, __LINE__);
assertSame($now->plusYears(6)->isLastDecade(), false, __LINE__);
assertSame($now->minusYears(7)->isThisDecade(), false, __LINE__);
assertSame($now->minusYears(6)->isThisDecade(), false, __LINE__);
assertSame($now->minusYears(5)->isThisDecade(), true, __LINE__);
assertSame($now->minusYears(4)->isThisDecade(), true, __LINE__);
assertSame($now->plusYears(3)->isThisDecade(), true, __LINE__);
assertSame($now->plusYears(4)->isThisDecade(), true, __LINE__);
assertSame($now->plusYears(5)->isThisDecade(), false, __LINE__);
assertSame($now->plusYears(6)->isThisDecade(), false, __LINE__);
assertSame($now->minusYears(7)->isNextDecade(), false, __LINE__);
assertSame($now->minusYears(6)->isNextDecade(), false, __LINE__);
assertSame($now->minusYears(5)->isNextDecade(), false, __LINE__);
assertSame($now->minusYears(4)->isNextDecade(), false, __LINE__);
assertSame($now->plusYears(3)->isNextDecade(), false, __LINE__);
assertSame($now->plusYears(4)->isNextDecade(), false, __LINE__);
assertSame($now->plusYears(5)->isNextDecade(), true, __LINE__);
assertSame($now->plusYears(6)->isNextDecade(), true, __LINE__);

assertSame($now->minusYears(70)->isLastCentury(), true, __LINE__);
assertSame($now->minusYears(60)->isLastCentury(), true, __LINE__);
assertSame($now->minusYears(50)->isLastCentury(), false, __LINE__);
assertSame($now->minusYears(40)->isLastCentury(), false, __LINE__);
assertSame($now->plusYears(30)->isLastCentury(), false, __LINE__);
assertSame($now->plusYears(40)->isLastCentury(), false, __LINE__);
assertSame($now->plusYears(50)->isLastCentury(), false, __LINE__);
assertSame($now->plusYears(60)->isLastCentury(), false, __LINE__);
assertSame($now->minusYears(70)->isThisCentury(), false, __LINE__);
assertSame($now->minusYears(60)->isThisCentury(), false, __LINE__);
assertSame($now->minusYears(50)->isThisCentury(), true, __LINE__);
assertSame($now->minusYears(40)->isThisCentury(), true, __LINE__);
assertSame($now->plusYears(30)->isThisCentury(), true, __LINE__);
assertSame($now->plusYears(40)->isThisCentury(), true, __LINE__);
assertSame($now->plusYears(50)->isThisCentury(), false, __LINE__);
assertSame($now->plusYears(60)->isThisCentury(), false, __LINE__);
assertSame($now->minusYears(70)->isNextCentury(), false, __LINE__);
assertSame($now->minusYears(60)->isNextCentury(), false, __LINE__);
assertSame($now->minusYears(50)->isNextCentury(), false, __LINE__);
assertSame($now->minusYears(40)->isNextCentury(), false, __LINE__);
assertSame($now->plusYears(30)->isNextCentury(), false, __LINE__);
assertSame($now->plusYears(40)->isNextCentury(), false, __LINE__);
assertSame($now->plusYears(50)->isNextCentury(), true, __LINE__);
assertSame($now->plusYears(60)->isNextCentury(), true, __LINE__);

assertSame($now->minusYears(1000)->isLastMillennium(), true, __LINE__);
assertSame($now->minusYears(900)->isLastMillennium(), true, __LINE__);
assertSame($now->minusYears(800)->isLastMillennium(), false, __LINE__);
assertSame($now->minusYears(700)->isLastMillennium(), false, __LINE__);
assertSame($now->plusYears(50)->isLastMillennium(), false, __LINE__);
assertSame($now->plusYears(100)->isLastMillennium(), false, __LINE__);
assertSame($now->plusYears(150)->isLastMillennium(), false, __LINE__);
assertSame($now->plusYears(200)->isLastMillennium(), false, __LINE__);
assertSame($now->minusYears(1000)->isThisMillennium(), false, __LINE__);
assertSame($now->minusYears(900)->isThisMillennium(), false, __LINE__);
assertSame($now->minusYears(800)->isThisMillennium(), true, __LINE__);
assertSame($now->minusYears(700)->isThisMillennium(), true, __LINE__);
assertSame($now->plusYears(50)->isThisMillennium(), true, __LINE__);
assertSame($now->plusYears(100)->isThisMillennium(), true, __LINE__);
assertSame($now->plusYears(150)->isThisMillennium(), false, __LINE__);
assertSame($now->plusYears(200)->isThisMillennium(), false, __LINE__);
assertSame($now->minusYears(1000)->isNextMillennium(), false, __LINE__);
assertSame($now->minusYears(900)->isNextMillennium(), false, __LINE__);
assertSame($now->minusYears(800)->isNextMillennium(), false, __LINE__);
assertSame($now->minusYears(700)->isNextMillennium(), false, __LINE__);
assertSame($now->plusYears(50)->isNextMillennium(), false, __LINE__);
assertSame($now->plusYears(100)->isNextMillennium(), false, __LINE__);
assertSame($now->plusYears(150)->isNextMillennium(), true, __LINE__);
assertSame($now->plusYears(200)->isNextMillennium(), true, __LINE__);

assertSame((string) $now->startOfMinute(), '1855-06-15T12:30:00-08:00', __LINE__);
assertSame((string) $now->endOfMinute(), '1855-06-15T12:30:59-08:00', __LINE__);
assertSame((string) $now->startOfHour(), '1855-06-15T12:00:00-08:00', __LINE__);
assertSame((string) $now->endOfHour(), '1855-06-15T12:59:59-08:00', __LINE__);
assertSame((string) $now->startOfDay(), '1855-06-15T00:00:00-08:00', __LINE__);
assertSame((string) $now->endOfDay(), '1855-06-15T23:59:59-08:00', __LINE__);
assertSame((string) $now->startOfWeek(), '1855-06-11T00:00:00-08:00', __LINE__);
assertSame((string) $now->endOfWeek(), '1855-06-17T23:59:59-08:00', __LINE__);
assertSame((string) $now->startOfMonth(), '1855-06-01T00:00:00-08:00', __LINE__);
assertSame((string) $now->endOfMonth(), '1855-06-30T23:59:59-08:00', __LINE__);
assertSame((string) $now->startOfYear(), '1855-01-01T00:00:00-08:00', __LINE__);
assertSame((string) $now->endOfYear(), '1855-12-31T23:59:59-08:00', __LINE__);
assertSame((string) $now->startOfDecade(), '1850-01-01T00:00:00-08:00', __LINE__);
assertSame((string) $now->endOfDecade(), '1859-12-31T23:59:59-08:00', __LINE__);
assertSame((string) $now->startOfCentury(), '1800-01-01T00:00:00-08:00', __LINE__);
assertSame((string) $now->endOfCentury(), '1899-12-31T23:59:59-08:00', __LINE__);
assertSame((string) $now->startOfMillennium(), '1000-01-01T00:00:00-08:00', __LINE__);
assertSame((string) $now->endOfMillennium(), '1999-12-31T23:59:59-08:00', __LINE__);

assertSame(\round($moonLanding->calculateMillisUntil($smallStepForMan), 4), \round(23891000, 4), __LINE__);
assertSame(\round($moonLanding->calculateSecondsUntil($smallStepForMan), 4), \round(23891, 4), __LINE__);
assertSame(\round($moonLanding->calculateMinutesUntil($smallStepForMan), 4), \round(398.183333333, 4), __LINE__);
assertSame((string) $moonLanding->calculateIso8601DurationUntil($smallStepForMan), 'PT6H38M11S', __LINE__);

assertSame(\Delight\Temporal\Duration::fromIso8601('-P3Y6M4DT12H30M5S')->getYears(), 3, __LINE__);
assertSame(\Delight\Temporal\Duration::fromIso8601('-P3Y6M4DT12H30M5S')->getMonths(), 6, __LINE__);
assertSame(\Delight\Temporal\Duration::fromIso8601('-P3Y6M4DT12H30M5S')->getWeeks(), 0, __LINE__);
assertSame(\Delight\Temporal\Duration::fromIso8601('-P3Y6M4DT12H30M5S')->getDays(), 4, __LINE__);
assertSame(\Delight\Temporal\Duration::fromIso8601('-P3Y6M4DT12H30M5S')->getHours(), 12, __LINE__);
assertSame(\Delight\Temporal\Duration::fromIso8601('-P3Y6M4DT12H30M5S')->getMinutes(), 30, __LINE__);
assertSame(\Delight\Temporal\Duration::fromIso8601('-P3Y6M4DT12H30M5S')->getSeconds(), 5, __LINE__);
assertSame(\Delight\Temporal\Duration::fromIso8601('-P3Y6M4DT12H30M5S')->isPositive(), false, __LINE__);
assertSame(\Delight\Temporal\Duration::fromIso8601('-P3Y6M4DT12H30M5S')->isNegative(), true, __LINE__);
assertSame(\Delight\Temporal\Duration::fromIso8601('-P3Y6M4DT12H30M5S')->getSign(), -1, __LINE__);
assertSame(\Delight\Temporal\Duration::fromIso8601('-P3Y6M4DT12H30M5S')->toIso8601(), '-P3Y6M4DT12H30M5S', __LINE__);
assertSame(\round(\Delight\Temporal\Duration::fromIso8601('-P3Y6M4DT12H30M5S')->toAverageYears(), 5), -3.51238, __LINE__);
assertSame(\round(\Delight\Temporal\Duration::fromIso8601('-P3Y6M4DT12H30M5S')->toAverageMonths(), 5), -42.14853, __LINE__);
assertSame(\round(\Delight\Temporal\Duration::fromIso8601('-P3Y6M4DT12H30M5S')->toAverageWeeks(), 5), -183.26709, __LINE__);
assertSame(\round(\Delight\Temporal\Duration::fromIso8601('-P3Y6M4DT12H30M5S')->toAverageDays(), 5), -1282.86964, __LINE__);
assertSame(\round(\Delight\Temporal\Duration::fromIso8601('-P3Y6M4DT12H30M5S')->toAverageHours(), 5), -30788.87139, __LINE__);
assertSame(\round(\Delight\Temporal\Duration::fromIso8601('-P3Y6M4DT12H30M5S')->toAverageMinutes(), 5), -1847332.28333, __LINE__);
assertSame(\round(\Delight\Temporal\Duration::fromIso8601('-P3Y6M4DT12H30M5S')->toAverageSeconds(), 5), -110839937.0, __LINE__);
assertSame(\Delight\Temporal\Duration::fromIso8601('-P3Y6M4DT12H30M5S')->plus(\Delight\Temporal\Duration::fromDateTime(0, 22, 0, 0, 0, 96))->toIso8601(), '-P3Y28M4DT12H30M101S', __LINE__);
assertSame(\Delight\Temporal\Duration::fromIso8601('-P3Y6M4DT12H30M5S')->multipliedBy(3)->toIso8601(), '-P9Y18M12DT36H90M15S', __LINE__);
assertSame(\Delight\Temporal\Duration::fromIso8601('-P3Y6M4DT12H30M5S')->multipliedBy(0)->toIso8601(), 'PT0S', __LINE__);
assertSame(\Delight\Temporal\Duration::fromIso8601('-P3Y6M4DT12H30M5S')->multipliedBy(12)->toIso8601(), '-P36Y72M48DT144H360M60S', __LINE__);
assertSame(\Delight\Temporal\Duration::fromIso8601('-P3Y6M4DT12H30M5S')->invert()->toIso8601(), 'P3Y6M4DT12H30M5S', __LINE__);
assertSame(\Delight\Temporal\Duration::fromIso8601('P42W')->toIso8601(), 'P42W', __LINE__);
assertSame(\Delight\Temporal\Duration::fromIso8601('P42W')->plus(\Delight\Temporal\Duration::fromIso8601('P51W'))->toIso8601(), 'P93W', __LINE__);
assertSame(\Delight\Temporal\Duration::fromIso8601('P42W')->multipliedBy(4)->toIso8601(), 'P168W', __LINE__);

echo "\n";
echo '[SUCCESS]';

function assertSame($a, $b, $line) {
	echo '[LINE ' . \sprintf('%04d', $line) . '] ';
	var_dump($a);

	if ($a !== $b) {
		echo '    [ERROR] ';
		var_dump($b);

		exit;
	}
}
